<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>李宇的博客</title>
  
  <subtitle>伴我萧萧惟代码,笑人寂寂有bug</subtitle>
  <link href="https://www.uliyu.com/atom.xml" rel="self"/>
  
  <link href="https://www.uliyu.com/"/>
  <updated>2019-12-14T06:12:54.218Z</updated>
  <id>https://www.uliyu.com/</id>
  
  <author>
    <name>Liyu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker ES-head插件和IK分词器安装</title>
    <link href="https://www.uliyu.com/2019/12/14/d-head/"/>
    <id>https://www.uliyu.com/2019/12/14/d-head/</id>
    <published>2019-12-14T05:30:12.000Z</published>
    <updated>2019-12-14T06:12:54.218Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/12/14/WE9it7X24LlrIJQ.jpg" alt="1.jpeg"><br><a id="more"></a> </p><h1 id="ES-head插件和IK分词器安装"><a href="#ES-head插件和IK分词器安装" class="headerlink" title="ES-head插件和IK分词器安装"></a>ES-head插件和IK分词器安装</h1><h2 id="一、Head安装"><a href="#一、Head安装" class="headerlink" title="一、Head安装"></a>一、Head安装</h2><h3 id="1-直接pull"><a href="#1-直接pull" class="headerlink" title="1.直接pull"></a>1.直接pull</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# docker pull mobz/elasticsearch-head:5</span><br></pre></td></tr></table></figure><h3 id="2-启动"><a href="#2-启动" class="headerlink" title="2.启动"></a>2.启动</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# docker run -d -p 9100:9100 docker.io/mobz/elasticsearch-head:5</span><br></pre></td></tr></table></figure><h3 id="3-访问连接"><a href="#3-访问连接" class="headerlink" title="3.访问连接"></a>3.访问连接</h3><p> <a href="http://47.107.166.187:9100/" target="_blank" rel="noopener">http://47.107.166.187:9100/</a> </p><p><img src="https://i.loli.net/2019/12/14/IFB3tdMjJYhaLr4.png" alt="h1.png"></p><h3 id="4-处理跨域"><a href="#4-处理跨域" class="headerlink" title="4.处理跨域"></a>4.处理跨域</h3><p>第一步，执行  <code>docker ps</code> 拿到ES容器id</p><p>第二步， docker exec -it （ESid） bash </p><p>第三步，在elasticsearch.yml中添加： </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">http.cors.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">http.cors.allow-origin:</span> <span class="string">"*"</span></span><br></pre></td></tr></table></figure><p>第四步,重启ES</p><p>场景再现:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# docker exec -it 06904a41607d bash</span><br><span class="line">[root@06904a41607d elasticsearch]# ll</span><br><span class="line">total 452</span><br><span class="line">-rw-r--r--  1 elasticsearch root  13675 Feb 13  2019 LICENSE.txt</span><br><span class="line">-rw-r--r--  1 elasticsearch root 403816 Feb 13  2019 NOTICE.txt</span><br><span class="line">-rw-r--r--  1 elasticsearch root   8519 Feb 13  2019 README.textile</span><br><span class="line">drwxr-xr-x  3 elasticsearch root   4096 Feb 13  2019 bin</span><br><span class="line">drwxrwxr-x  1 elasticsearch root   4096 Nov 13 08:19 config</span><br><span class="line">drwxrwxr-x  1 elasticsearch root   4096 Nov 13 08:19 data</span><br><span class="line">drwxr-xr-x  3 elasticsearch root   4096 Feb 13  2019 lib</span><br><span class="line">drwxrwxr-x  1 elasticsearch root   4096 Nov 13 08:26 logs</span><br><span class="line">drwxr-xr-x 29 elasticsearch root   4096 Feb 13  2019 modules</span><br><span class="line">drwxr-xr-x  4 elasticsearch root   4096 Feb 13  2019 plugins</span><br><span class="line">[root@06904a41607d elasticsearch]# cd config/</span><br><span class="line">[root@06904a41607d config]# ll</span><br><span class="line">total 28</span><br><span class="line">-rw-rw---- 1 elasticsearch root  207 Nov 13 08:19 elasticsearch.keystore</span><br><span class="line">-rw-r--r-- 1 elasticsearch root   53 Feb 13  2019 elasticsearch.yml</span><br><span class="line">drwxr-x--- 2 elasticsearch root 4096 Feb 13  2019 ingest-geoip</span><br><span class="line">-rw-rw---- 1 elasticsearch root 3613 Feb 13  2019 jvm.options</span><br><span class="line">-rw-r--r-- 1 elasticsearch root  285 Feb 13  2019 log4j2.properties</span><br><span class="line">-rw-rw---- 1 elasticsearch root  473 Feb 13  2019 role_mapping.yml</span><br><span class="line">-rw-rw---- 1 elasticsearch root  197 Feb 13  2019 roles.yml</span><br><span class="line">-rw-rw---- 1 elasticsearch root    0 Feb 13  2019 users</span><br><span class="line">-rw-rw---- 1 elasticsearch root    0 Feb 13  2019 users_roles</span><br><span class="line">[root@06904a41607d config]# vi elasticsearch.yml</span><br></pre></td></tr></table></figure><h3 id="5-继续访问连接"><a href="#5-继续访问连接" class="headerlink" title="5.继续访问连接"></a>5.继续访问连接</h3><p><img src="https://i.loli.net/2019/12/14/1fqeZWjnoV8X6hb.png" alt="2.png"></p><h2 id="二、安装IK"><a href="#二、安装IK" class="headerlink" title="二、安装IK"></a>二、安装IK</h2><p>未写 （好像内存不足）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.6.1/elasticsearch-analysis-ik-6.6.1.zip</span><br></pre></td></tr></table></figure><h2 id="三、新建索引"><a href="#三、新建索引" class="headerlink" title="三、新建索引"></a>三、新建索引</h2><h3 id="1-新建报错"><a href="#1-新建报错" class="headerlink" title="1.新建报错"></a>1.新建报错</h3><p><img src="https://i.loli.net/2019/12/14/JsXnSreEAOVphKk.png" alt="head1.png"></p><h3 id="2-解决"><a href="#2-解决" class="headerlink" title="2.解决"></a>2.解决</h3><p> 第一步：进入 head 安装目录 </p><p><img src="https://i.loli.net/2019/12/14/CpVLiPRqcGrKked.png" alt="head2.png"></p><p> 第二步：编辑 vendor.js </p><p>第三不：修改两处</p><p><img src="https://i.loli.net/2019/12/14/KIiaQgCUFujmARc.png" alt="e1.png"></p><p><img src="https://i.loli.net/2019/12/14/feCx5q7E2yZrIak.png" alt="e11.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">contentType: <span class="string">"application/json;charset=UTF-8"</span>,</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/12/14/L5ohrg4yiJxSNHO.png" alt="e2.png"></p><p><img src="https://i.loli.net/2019/12/14/jWXludaihLZxn52.png" alt="e22.png"><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> inspectData = s.contentType === <span class="string">"application/json;charset=UTF-8"</span> &amp;&amp;</span><br></pre></td></tr></table></figure></p><h3 id="3-ps-vim安装"><a href="#3-ps-vim安装" class="headerlink" title="3.ps(vim安装)"></a>3.ps(vim安装)</h3><p>先更新后安装</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@711defd99d64:/usr/src/app/_site# apt-get update</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@711defd99d64:/usr/src/app/_site# apt-get install vim</span><br></pre></td></tr></table></figure><h3 id="4-再创建"><a href="#4-再创建" class="headerlink" title="4.再创建"></a>4.再创建</h3><p><img src="https://i.loli.net/2019/12/14/xCXV2FZp3IyfvPm.png" alt="h33.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/12/14/WE9it7X24LlrIJQ.jpg&quot; alt=&quot;1.jpeg&quot;&gt;&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="docker" scheme="https://www.uliyu.com/tags/docker/"/>
    
    <category term="Elasticsearch-head" scheme="https://www.uliyu.com/tags/Elasticsearch-head/"/>
    
    <category term="iK" scheme="https://www.uliyu.com/tags/iK/"/>
    
  </entry>
  
  <entry>
    <title>Docker安装Elasticsearch</title>
    <link href="https://www.uliyu.com/2019/12/14/d-es/"/>
    <id>https://www.uliyu.com/2019/12/14/d-es/</id>
    <published>2019-12-14T05:26:58.000Z</published>
    <updated>2019-12-14T06:12:46.255Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/12/14/8Q6LGwgJMdyIhqD.jpg" alt="303.jpg"><br><a id="more"></a> </p><h1 id="Docker安装Elasticsearch"><a href="#Docker安装Elasticsearch" class="headerlink" title="Docker安装Elasticsearch"></a>Docker安装Elasticsearch</h1><h2 id="1-直接pull"><a href="#1-直接pull" class="headerlink" title="1.直接pull"></a>1.直接pull</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# docker pull elasticsearch:6.6.1</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/12/14/qcdCv1VyhJ43kbl.png" alt="1.png"></p><h2 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# docker run --name elasticsearch -d -e ES_JAVA_OPTS="-Xms512m -Xmx512m" -p 9200:9200 -p 9300:9300 elasticsearch:6.6.1</span><br></pre></td></tr></table></figure><h2 id="3-开心的去访问"><a href="#3-开心的去访问" class="headerlink" title="3.开心的去访问"></a>3.开心的去访问</h2><p>发现访问不到  沃特佛？？</p><h2 id="4-沃特佛"><a href="#4-沃特佛" class="headerlink" title="4.沃特佛"></a>4.沃特佛</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# docker ps -a</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/12/14/2b63keqauSl1toW.png" alt="2.png"></p><p>看到停止了，我们看下启动日志</p><p>复制前面CONTAINER ID  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# docker logs -f 06904a41607d</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/12/14/GrazO3h4lR8no6k.png" alt="logs.png"></p><p> 发现max_map_count  值小了 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# cat /proc/sys/vm/max_map_count</span><br><span class="line">65530</span><br></pre></td></tr></table></figure><p>让它变大</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# sysctl -w vm.max_map_count=262144</span><br></pre></td></tr></table></figure><h2 id="5-启动"><a href="#5-启动" class="headerlink" title="5.启动"></a>5.启动</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# docker start elasticsearch</span><br><span class="line">elasticsearch</span><br><span class="line">[root@kaiyukeji /]# docker logs -f 06904a41607d</span><br></pre></td></tr></table></figure><h2 id="6-再次访问"><a href="#6-再次访问" class="headerlink" title="6.再次访问"></a>6.再次访问</h2><p><img src="https://i.loli.net/2019/12/14/hV6TDn2iGuyboZJ.png" alt="4.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/12/14/8Q6LGwgJMdyIhqD.jpg&quot; alt=&quot;303.jpg&quot;&gt;&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="docker" scheme="https://www.uliyu.com/tags/docker/"/>
    
    <category term="Elasticsearch" scheme="https://www.uliyu.com/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Docker 安装rabbitMQ</title>
    <link href="https://www.uliyu.com/2019/12/14/d-rabbitmq/"/>
    <id>https://www.uliyu.com/2019/12/14/d-rabbitmq/</id>
    <published>2019-12-14T05:26:15.000Z</published>
    <updated>2019-12-14T06:12:34.610Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/12/14/Nm6b1HiFIuUsMSw.jpg" alt="201999999999.jpg"><br><a id="more"></a> </p><h1 id="Docker-安装rabbitMQ"><a href="#Docker-安装rabbitMQ" class="headerlink" title="Docker 安装rabbitMQ"></a>Docker 安装rabbitMQ</h1><p>前面有写rabbitMq入门到HelloWorld一篇，rabbitMQ是基于Win版本安装的，这篇使用docker快速安装rabbitmq。</p><h2 id="1-直接pull"><a href="#1-直接pull" class="headerlink" title="1.直接pull"></a>1.直接pull</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# docker pull rabbitmq:management</span><br></pre></td></tr></table></figure><p>指定management版本，该版本包含了web控制页面</p><h2 id="2-Docker安装"><a href="#2-Docker安装" class="headerlink" title="2.Docker安装"></a>2.Docker安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]#  docker run --name rabbitmq -d -p 15672:15672 -p 5672:5672 rabbitmq:management</span><br></pre></td></tr></table></figure><h2 id="3-访问"><a href="#3-访问" class="headerlink" title="3.访问"></a>3.访问</h2><p><img src="https://i.loli.net/2019/12/14/arK4bm8kYxzfuiW.png" alt="1.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://47.107.166.187:15672</span><br><span class="line">guest guest</span><br></pre></td></tr></table></figure><h2 id="4-日常三连"><a href="#4-日常三连" class="headerlink" title="4.日常三连"></a>4.日常三连</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# docker stop rabbitmq</span><br><span class="line">rabbitmq</span><br><span class="line">[root@kaiyukeji /]# docker start rabbitmq</span><br><span class="line">rabbitmq</span><br><span class="line">[root@kaiyukeji /]# docker restart rabbitmq</span><br><span class="line">rabbitmq</span><br></pre></td></tr></table></figure><h2 id="5-最后"><a href="#5-最后" class="headerlink" title="5.最后"></a>5.最后</h2><p>方便快捷，强烈推荐使用docker容器，告辞！ </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/12/14/Nm6b1HiFIuUsMSw.jpg&quot; alt=&quot;201999999999.jpg&quot;&gt;&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="docker" scheme="https://www.uliyu.com/tags/docker/"/>
    
    <category term="rabbitMQ" scheme="https://www.uliyu.com/tags/rabbitMQ/"/>
    
  </entry>
  
  <entry>
    <title>Docker安装redis</title>
    <link href="https://www.uliyu.com/2019/12/14/d-redis/"/>
    <id>https://www.uliyu.com/2019/12/14/d-redis/</id>
    <published>2019-12-14T05:25:57.000Z</published>
    <updated>2019-12-14T06:13:07.721Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/12/14/tYinpHhxsTkB2rL.jpg" alt="596f9bc03c484.jpeg"><br><a id="more"></a> </p><h1 id="Docker安装redis"><a href="#Docker安装redis" class="headerlink" title="Docker安装redis"></a>Docker安装redis</h1><h2 id="1-查看redis"><a href="#1-查看redis" class="headerlink" title="1.查看redis"></a>1.查看redis</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# docker search redis</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/12/13/kiEeWXqbAtOGvDz.png" alt="1.png"></p><h2 id="2-拉取redis镜像"><a href="#2-拉取redis镜像" class="headerlink" title="2.拉取redis镜像"></a>2.拉取redis镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# docker pull redis</span><br></pre></td></tr></table></figure><h2 id="3-查看镜像"><a href="#3-查看镜像" class="headerlink" title="3. 查看镜像"></a>3. 查看镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# docker images redis</span><br></pre></td></tr></table></figure><h2 id="4-docker启动redis"><a href="#4-docker启动redis" class="headerlink" title="4.docker启动redis"></a>4.docker启动redis</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# docker run --name redis -p 6379:6379 -d --restart=always redis:latest redis-server --appendonly yes --requirepass "登录密码"</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-p 6379:6379　　设置6379端口映射到6379端口</span><br><span class="line">-v $PWD/data:/data 　　将主机中当前目录下的data挂载到容器的/data</span><br><span class="line">--name redis　　　指定本容器名</span><br><span class="line">-d redis:latest　　　　指定这个redis容器后台运行</span><br><span class="line">redis-server --appendonly yes　　　　在容器执行redis-server启动命令，并打开redis持久化配置</span><br><span class="line">--requirepass "登录密码"  指定登录密码</span><br></pre></td></tr></table></figure><h2 id="5-注意"><a href="#5-注意" class="headerlink" title="5.注意"></a>5.注意</h2><p>开放6379端口，阿里云安全组添加</p><p><img src="https://i.loli.net/2019/12/13/S2rL96KJQc4Px8b.png" alt="3s.png"><br>端口查看</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# firewall-cmd --permanent --zone=public --add-port=6379/tcp</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/12/14/rIRAYEJegXHb4KC.png" alt="port.png"></p><h2 id="6-远程测试连接"><a href="#6-远程测试连接" class="headerlink" title="6.远程测试连接"></a>6.远程测试连接</h2><p><img src="https://i.loli.net/2019/12/14/NisShCtbEJMc326.png" alt="4.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/12/14/tYinpHhxsTkB2rL.jpg&quot; alt=&quot;596f9bc03c484.jpeg&quot;&gt;&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="docker" scheme="https://www.uliyu.com/tags/docker/"/>
    
    <category term="redis" scheme="https://www.uliyu.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>阿里云服务器安装Docker(Centos 7)</title>
    <link href="https://www.uliyu.com/2019/12/14/docker/"/>
    <id>https://www.uliyu.com/2019/12/14/docker/</id>
    <published>2019-12-14T05:16:36.000Z</published>
    <updated>2019-12-14T06:13:12.273Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/12/14/OYoF9cveMirbZWg.jpg" alt="lv.jpg"></p><h1 id="阿里云服务器安装Docker-Centos-7"><a href="#阿里云服务器安装Docker-Centos-7" class="headerlink" title="阿里云服务器安装Docker(Centos 7)"></a>阿里云服务器安装Docker(Centos 7)</h1><a id="more"></a> <p>安装之前，可以百度了解下docker是啥玩意，也不单独发篇文章来说了，网上好文章很多，这里只做于实践操作记录。</p><p>(ps：阿里云服务器闲置许久)</p><h3 id="1-更新yum包到最新版本"><a href="#1-更新yum包到最新版本" class="headerlink" title="1.更新yum包到最新版本"></a>1.更新yum包到最新版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# yum -y update</span><br></pre></td></tr></table></figure><h3 id="2-卸载旧版本和遗留的docker软件包"><a href="#2-卸载旧版本和遗留的docker软件包" class="headerlink" title="2.卸载旧版本和遗留的docker软件包"></a>2.卸载旧版本和遗留的docker软件包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# yum remove docker-common docker-selinux docker-engine</span><br></pre></td></tr></table></figure><h3 id="3-安装所需的软件包"><a href="#3-安装所需的软件包" class="headerlink" title="3.安装所需的软件包"></a>3.安装所需的软件包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><h3 id="4-设置yum源"><a href="#4-设置yum源" class="headerlink" title="4.设置yum源"></a>4.设置yum源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><h3 id="5-查看docker版本"><a href="#5-查看docker版本" class="headerlink" title="5.查看docker版本"></a>5.查看docker版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# yum list docker-ce --showduplicates | sort -r</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/12/13/l1rtwupmXFG3PiQ.png" alt="docker1.png"></p><h3 id="6-安装docker"><a href="#6-安装docker" class="headerlink" title="6.安装docker"></a>6.安装docker</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# yum install -y docker-ce</span><br></pre></td></tr></table></figure><h3 id="7-启动docker服务"><a href="#7-启动docker服务" class="headerlink" title="7.启动docker服务"></a>7.启动docker服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# systemctl start docker</span><br></pre></td></tr></table></figure><h3 id="8-查看是否安装成功"><a href="#8-查看是否安装成功" class="headerlink" title="8.查看是否安装成功"></a>8.查看是否安装成功</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# docker version</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/12/13/T8ReUKqWZHXN7Yg.png" alt="docker2.png"></p><h3 id="完"><a href="#完" class="headerlink" title="完"></a>完</h3>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/12/14/OYoF9cveMirbZWg.jpg&quot; alt=&quot;lv.jpg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;阿里云服务器安装Docker-Centos-7&quot;&gt;&lt;a href=&quot;#阿里云服务器安装Docker-Centos-7&quot; class=&quot;headerlink&quot; title=&quot;阿里云服务器安装Docker(Centos 7)&quot;&gt;&lt;/a&gt;阿里云服务器安装Docker(Centos 7)&lt;/h1&gt;</summary>
    
    
    
    
    <category term="docker" scheme="https://www.uliyu.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>初识RabbitMQ到HelloWorld</title>
    <link href="https://www.uliyu.com/2019/12/14/rabbitmq1/"/>
    <id>https://www.uliyu.com/2019/12/14/rabbitmq1/</id>
    <published>2019-12-14T05:00:21.000Z</published>
    <updated>2019-12-14T06:12:25.905Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/12/14/Nm6b1HiFIuUsMSw.jpg" alt="201999999999.jpg"><br><a id="more"></a> </p><h1 id="初识RabbitMQ到HelloWorld"><a href="#初识RabbitMQ到HelloWorld" class="headerlink" title="初识RabbitMQ到HelloWorld"></a>初识RabbitMQ到HelloWorld</h1><h2 id="一、RabbitMQ介绍"><a href="#一、RabbitMQ介绍" class="headerlink" title="一、RabbitMQ介绍"></a>一、RabbitMQ介绍</h2><h3 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1.介绍"></a>1.介绍</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MQ全称为Message Queue，即消息队列， RabbitMQ是由erlang语言开发，基于AMQP（Advanced Message Queue 高级消息队列协议）协议实现的消息队列，它是一种应用程序之间的通信方法，消息队列在分布式系统开 发中应用非常广泛。RabbitMQ官方地址：http:<span class="comment">//www.rabbitmq.com/</span></span><br></pre></td></tr></table></figure><h3 id="2-应用场景"><a href="#2-应用场景" class="headerlink" title="2.应用场景"></a>2.应用场景</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、任务异步处理。</span><br><span class="line">将不需要同步处理的并且耗时长的操作由消息队列通知消息接收方进行异步处理。提高了应用程序的响应时间。</span><br><span class="line"><span class="number">2</span>、应用程序解耦合 MQ相当于一个中介，生产方通过MQ与消费方交互，它将应用程序进行解耦合。</span><br></pre></td></tr></table></figure><h2 id="二、快速入门"><a href="#二、快速入门" class="headerlink" title="二、快速入门"></a>二、快速入门</h2><h3 id="RabbitMQ工作原理"><a href="#RabbitMQ工作原理" class="headerlink" title="RabbitMQ工作原理"></a>RabbitMQ工作原理</h3><p><img src="https://i.loli.net/2019/12/13/F6IT9dEm1LRjw3S.png" alt="1568945320105.png"></p><p>组成部分说明如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Broker：消息队列服务进程，此进程包括两个部分：Exchange和Queue。 </span><br><span class="line">Exchange：消息队列交换机，按一定的规则将消息路由转发到某个队列，对消息进行过滤。</span><br><span class="line">Queue：消息队列，存储消息的队列，消息到达队列并转发给指定的消费方。 </span><br><span class="line">Producer：消息生产者，即生产方客户端，生产方客户端将消息发送到MQ。 </span><br><span class="line">Consumer：消息消费者，即消费方客户端，接收MQ转发的消息。</span><br></pre></td></tr></table></figure><p>消息发布接收流程：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-----发送消息----</span><br><span class="line"><span class="number">1</span>、生产者和Broker建立TCP连接。</span><br><span class="line"><span class="number">2</span>、生产者和Broker建立通道。 </span><br><span class="line"><span class="number">3</span>、生产者通过通道消息发送给Broker，由Exchange将消息进行转发。 </span><br><span class="line"><span class="number">4</span>、Exchange将消息转发到指定的Queue（队列）</span><br><span class="line">----接收消息----</span><br><span class="line"><span class="number">1</span>、消费者和Broker建立TCP连接 </span><br><span class="line"><span class="number">2</span>、消费者和Broker建立通道 </span><br><span class="line"><span class="number">3</span>、消费者监听指定的Queue（队列）</span><br><span class="line"><span class="number">4</span>、当有消息到达Queue时Broker默认将消息推送给消费者。 </span><br><span class="line"><span class="number">5</span>、消费者接收到消息。</span><br></pre></td></tr></table></figure><h2 id="三、下载安装"><a href="#三、下载安装" class="headerlink" title="三、下载安装"></a>三、下载安装</h2><p>RabbitMQ由Erlang语言开发，Erlang语言用于并发及分布式系统的开发，在电信领域应用广泛，OTP（Open Telecom Platform）作为Erlang语言的一部分，包含了很多基于Erlang开发的中间件及工具库，安装RabbitMQ需 要安装Erlang/OTP，并保持版本匹配 </p><p>这里使用Erlang/OTP 20.3版本和RabbitMQ3.7.3版本进行学习</p><h3 id="1-安装Erlang"><a href="#1-安装Erlang" class="headerlink" title="1.安装Erlang"></a>1.安装Erlang</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERLANG下载地址: http:<span class="comment">//erlang.org/download/otp_win64_20.3.exe</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/12/13/aICM5ltkc2hdpZE.png" alt="1568945710124.png"></p><p><img src="https://i.loli.net/2019/12/13/t1rNwOqLGyWdfs5.png" alt="1568945783572.png"></p><p><img src="https://i.loli.net/2019/12/13/ftqzeFRD1scSkp2.png" alt="1568945948323.png"></p><p><img src="https://i.loli.net/2019/12/13/crX3iUEtnvOSMQK.png" alt="1568946050150.png"></p><p><img src="https://i.loli.net/2019/12/13/O89VDiXGyrYnto3.png" alt="1568946072281.png"></p><h3 id="2-安装rabbitMQ"><a href="#2-安装rabbitMQ" class="headerlink" title="2.安装rabbitMQ"></a>2.安装rabbitMQ</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="comment">//github.com/rabbitmq/rabbitmq-server/releases/tag/v3.7.3</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/12/13/Ykios4hpXBrn1C7.png" alt="1568972458441.png"></p><p><img src="https://i.loli.net/2019/12/13/fonAgaIdZHi8679.png" alt="1568946474436.png"><br>abbitMQ安装好后接下来安装RabbitMQ-Plugins。打开命令行cd，输入RabbitMQ的sbin目录。<br>我的目录是：D:\Program Files\RabbitMQ Server\rabbitmq_server-3.7.3\sbin</p><p>然后在后面输入rabbitmq-plugins enable rabbitmq_management命令进行安装</p><p><img src="https://i.loli.net/2019/12/13/upQd6t2fveiq1TB.png" alt="1568946667846.png"></p><p>cmd管理员执行: net stop RabbitMQ &amp;&amp; net start RabbitMQ</p><p><img src="https://i.loli.net/2019/12/13/hJTvKd6Ey7xk91a.png" alt="1568947540272.png"></p><p><img src="https://i.loli.net/2019/12/13/Vvcsk9AD4RQMdEU.png" alt="12312312.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">访问 <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">15672</span></span><br><span class="line">登录账号:guest</span><br><span class="line">登录密码:guest</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/12/13/4DN1My6HvA2SJRk.png" alt="1568947606342.png"></p><h2 id="四、Helloworld"><a href="#四、Helloworld" class="headerlink" title="四、Helloworld"></a>四、Helloworld</h2><p>我们先用 rabbitMQ官方提供的java client测试 参考 ：<a href="https://github.com/rabbitmq/rabbitmq-java-client/" target="_blank" rel="noopener">https://github.com/rabbitmq/rabbitmq-java-client/</a></p><p>创建生产者工程和消费者工程，分别加入RabbitMQ java client的依赖。 </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.rabbitmq&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;amqp-client&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;5.7.3&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="1-生产者"><a href="#1-生产者" class="headerlink" title="1.生产者"></a>1.生产者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Producer1</span> </span>&#123;</span><br><span class="line">    <span class="comment">//队列</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String QUEUE = <span class="string">"helloworld"</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//通过连接工厂创建新的连接和mq建立连接</span></span><br><span class="line">        ConnectionFactory connectionFactory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        connectionFactory.setHost(<span class="string">"127.0.0.1"</span>);</span><br><span class="line">        connectionFactory.setPort(<span class="number">5672</span>);<span class="comment">//端口</span></span><br><span class="line">        connectionFactory.setUsername(<span class="string">"guest"</span>);</span><br><span class="line">        connectionFactory.setPassword(<span class="string">"guest"</span>);</span><br><span class="line">        <span class="comment">//设置虚拟机，一个mq服务可以设置多个虚拟机，每个虚拟机就相当于一个独立的mq</span></span><br><span class="line">        connectionFactory.setVirtualHost(<span class="string">"/"</span>);</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        Channel channel = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//建立新连接</span></span><br><span class="line">            connection = connectionFactory.newConnection();</span><br><span class="line">            <span class="comment">//创建会话通道,生产者和mq服务所有通信都在channel通道中完成</span></span><br><span class="line">            channel = connection.createChannel();</span><br><span class="line">            <span class="comment">//声明队列，如果队列在mq 中没有则要创建</span></span><br><span class="line">            <span class="comment">//参数：String queue, boolean durable, boolean exclusive, boolean autoDelete, Map&lt;String, Object&gt; arguments</span></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 参数明细</span></span><br><span class="line"><span class="comment">             * 1、queue 队列名称</span></span><br><span class="line"><span class="comment">             * 2、durable 是否持久化，如果持久化，mq重启后队列还在</span></span><br><span class="line"><span class="comment">             * 3、exclusive 是否独占连接，队列只允许在该连接中访问，如果connection连接关闭队列则自动删除,如果将此参数设置true可用于临时队列的创建</span></span><br><span class="line"><span class="comment">             * 4、autoDelete 自动删除，队列不再使用时是否自动删除此队列，如果将此参数和exclusive参数设置为true就可以实现临时队列（队列不用了就自动删除）</span></span><br><span class="line"><span class="comment">             * 5、arguments 参数，可以设置一个队列的扩展参数，比如：可设置存活时间</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            channel.queueDeclare(QUEUE,<span class="keyword">true</span>,<span class="keyword">false</span>,<span class="keyword">false</span>,<span class="keyword">null</span>);</span><br><span class="line">            <span class="comment">//发送消息</span></span><br><span class="line">            <span class="comment">//参数：String exchange, String routingKey, BasicProperties props, byte[] body</span></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 参数明细：</span></span><br><span class="line"><span class="comment">             * 1、exchange，交换机，如果不指定将使用mq的默认交换机（设置为""）</span></span><br><span class="line"><span class="comment">             * 2、routingKey，路由key，交换机根据路由key来将消息转发到指定的队列，如果使用默认交换机，routingKey设置为队列的名称</span></span><br><span class="line"><span class="comment">             * 3、props，消息的属性</span></span><br><span class="line"><span class="comment">             * 4、body，消息内容</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="comment">//消息内容</span></span><br><span class="line">            String message = <span class="string">"hello world liyu"</span>;</span><br><span class="line">            channel.basicPublish(<span class="string">""</span>,QUEUE,<span class="keyword">null</span>,message.getBytes());</span><br><span class="line">            System.out.println(<span class="string">"send to mq "</span>+message);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//关闭连接</span></span><br><span class="line">            <span class="comment">//先关闭通道</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                channel.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (TimeoutException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/12/13/FzSGqpdex8HT5Wj.png" alt="1568963568146.png"></p><p><img src="https://i.loli.net/2019/12/13/SjkcydHa6LpnNMQ.png" alt="1568960182352.png"></p><h3 id="2-消费者"><a href="#2-消费者" class="headerlink" title="2.消费者"></a>2.消费者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Consumer1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//队列</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String QUEUE = <span class="string">"helloworld"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, TimeoutException </span>&#123;</span><br><span class="line">        <span class="comment">//通过连接工厂创建新的连接和mq建立连接</span></span><br><span class="line">        ConnectionFactory connectionFactory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        connectionFactory.setHost(<span class="string">"127.0.0.1"</span>);</span><br><span class="line">        connectionFactory.setPort(<span class="number">5672</span>);<span class="comment">//端口</span></span><br><span class="line">        connectionFactory.setUsername(<span class="string">"guest"</span>);</span><br><span class="line">        connectionFactory.setPassword(<span class="string">"guest"</span>);</span><br><span class="line">        <span class="comment">//设置虚拟机，一个mq服务可以设置多个虚拟机，每个虚拟机就相当于一个独立的mq</span></span><br><span class="line">        connectionFactory.setVirtualHost(<span class="string">"/"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//建立新连接</span></span><br><span class="line">        Connection connection = connectionFactory.newConnection();</span><br><span class="line">        <span class="comment">//创建会话通道,生产者和mq服务所有通信都在channel通道中完成</span></span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//监听队列</span></span><br><span class="line">        <span class="comment">//声明队列，如果队列在mq 中没有则要创建</span></span><br><span class="line">        <span class="comment">//参数：String queue, boolean durable, boolean exclusive, boolean autoDelete, Map&lt;String, Object&gt; arguments</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 参数明细</span></span><br><span class="line"><span class="comment">         * 1、queue 队列名称</span></span><br><span class="line"><span class="comment">         * 2、durable 是否持久化，如果持久化，mq重启后队列还在</span></span><br><span class="line"><span class="comment">         * 3、exclusive 是否独占连接，队列只允许在该连接中访问，如果connection连接关闭队列则自动删除,如果将此参数设置true可用于临时队列的创建</span></span><br><span class="line"><span class="comment">         * 4、autoDelete 自动删除，队列不再使用时是否自动删除此队列，如果将此参数和exclusive参数设置为true就可以实现临时队列（队列不用了就自动删除）</span></span><br><span class="line"><span class="comment">         * 5、arguments 参数，可以设置一个队列的扩展参数，比如：可设置存活时间</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        channel.queueDeclare(QUEUE,<span class="keyword">true</span>,<span class="keyword">false</span>,<span class="keyword">false</span>,<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//实现消费方法</span></span><br><span class="line">        DefaultConsumer defaultConsumer = <span class="keyword">new</span> DefaultConsumer(channel)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 当接收到消息后此方法将被调用</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> consumerTag  消费者标签，用来标识消费者的，在监听队列时设置channel.basicConsume</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> envelope 信封，通过envelope</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> properties 消息属性</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> body 消息内容</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleDelivery</span><span class="params">(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, <span class="keyword">byte</span>[] body)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                <span class="comment">//交换机</span></span><br><span class="line">                String exchange = envelope.getExchange();</span><br><span class="line">                <span class="comment">//消息id，mq在channel中用来标识消息的id，可用于确认消息已接收</span></span><br><span class="line">                <span class="keyword">long</span> deliveryTag = envelope.getDeliveryTag();</span><br><span class="line">                <span class="comment">//消息内容</span></span><br><span class="line">                String message= <span class="keyword">new</span> String(body,<span class="string">"utf-8"</span>);</span><br><span class="line">                System.out.println(<span class="string">"receive message:"</span>+message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//监听队列</span></span><br><span class="line">        <span class="comment">//参数：String queue, boolean autoAck, Consumer callback</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 参数明细：</span></span><br><span class="line"><span class="comment">         * 1、queue 队列名称</span></span><br><span class="line"><span class="comment">         * 2、autoAck 自动回复，当消费者接收到消息后要告诉mq消息已接收，如果将此参数设置为tru表示会自动回复mq，如果设置为false要通过编程实现回复</span></span><br><span class="line"><span class="comment">         * 3、callback，消费方法，当消费者接收到消息要执行的方法</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        channel.basicConsume(QUEUE,<span class="keyword">true</span>,defaultConsumer);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/12/13/TOyHN4hErSGcDlw.png" alt="1568961441395.png"></p><h3 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、发送端操作流程</span><br><span class="line">  <span class="number">1</span>）创建连接</span><br><span class="line">  <span class="number">2</span>）创建通道</span><br><span class="line">  <span class="number">3</span>）声明队列</span><br><span class="line">  <span class="number">4</span>）发送消息 </span><br><span class="line"><span class="number">2</span>、接收端操作流程</span><br><span class="line">  <span class="number">1</span>）创建连接</span><br><span class="line">  <span class="number">2</span>）创建通道</span><br><span class="line">  <span class="number">3</span>）声明队列</span><br><span class="line">  <span class="number">4</span>）监听队列</span><br><span class="line">  <span class="number">5</span>）接收消息</span><br></pre></td></tr></table></figure><h2 id="五、工作模式"><a href="#五、工作模式" class="headerlink" title="五、工作模式"></a>五、工作模式</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">RabbitMQ有以下几种工作模式 ： </span><br><span class="line"><span class="number">1</span>、Work queues </span><br><span class="line"><span class="number">2</span>、Publish/Subscribe</span><br><span class="line"><span class="number">3</span>、Routing </span><br><span class="line"><span class="number">4</span>、Topics</span><br><span class="line"><span class="number">5</span>、Header </span><br><span class="line"><span class="number">6</span>、RPC</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/12/14/Nm6b1HiFIuUsMSw.jpg&quot; alt=&quot;201999999999.jpg&quot;&gt;&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="rabbitmq" scheme="https://www.uliyu.com/tags/rabbitmq/"/>
    
  </entry>
  
  <entry>
    <title>使用redis实现集群session共享</title>
    <link href="https://www.uliyu.com/2019/10/24/session1/"/>
    <id>https://www.uliyu.com/2019/10/24/session1/</id>
    <published>2019-10-24T13:38:00.000Z</published>
    <updated>2019-10-23T14:27:18.794Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/10/23/NnI78bo5HxtaFuQ.jpg" alt="345.jpg"><br><a id="more"></a> </p><h1 id="使用redis实现集群session共享"><a href="#使用redis实现集群session共享" class="headerlink" title="使用redis实现集群session共享"></a>使用redis实现集群session共享</h1><h2 id="pom文件映入springsession依赖"><a href="#pom文件映入springsession依赖" class="headerlink" title="pom文件映入springsession依赖"></a>pom文件映入springsession依赖</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- SpringSession 相关依赖 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.session&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-session-data-redis&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="修改application-properties"><a href="#修改application-properties" class="headerlink" title="修改application.properties"></a>修改application.properties</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#Redis所在主机IP</span><br><span class="line">spring.redis.host=<span class="number">192.168</span><span class="number">.190</span><span class="number">.129</span></span><br><span class="line">#Redis端口</span><br><span class="line">spring.redis.port=<span class="number">6379</span></span><br><span class="line">#Redis密码</span><br><span class="line">spring.redis.password = <span class="number">123456</span></span><br></pre></td></tr></table></figure><h2 id="添加RedisSessionConfig配置类"><a href="#添加RedisSessionConfig配置类" class="headerlink" title="添加RedisSessionConfig配置类"></a>添加RedisSessionConfig配置类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liyu.sb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableRedisHttpSession</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisSessionConfig</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重新打包部署项目到集群"><a href="#重新打包部署项目到集群" class="headerlink" title="重新打包部署项目到集群"></a>重新打包部署项目到集群</h2><h2 id="浏览器访问Ngxin"><a href="#浏览器访问Ngxin" class="headerlink" title="浏览器访问Ngxin"></a>浏览器访问Ngxin</h2><h3 id="1-直接访问不带参数"><a href="#1-直接访问不带参数" class="headerlink" title="1.直接访问不带参数"></a>1.直接访问不带参数</h3><p><img src="https://i.loli.net/2019/10/23/c5UWPXfnRNoi1gQ.png" alt="1"></p><h3 id="2-携带参数"><a href="#2-携带参数" class="headerlink" title="2.携带参数"></a>2.携带参数</h3><p><img src="https://i.loli.net/2019/10/23/YEXKA4f9yo6l53v.png" alt="2"></p><h3 id="3-刷新不带参数"><a href="#3-刷新不带参数" class="headerlink" title="3.刷新不带参数"></a>3.刷新不带参数</h3><p><img src="https://i.loli.net/2019/10/23/onRZ6OzkNDifQXr.png" alt="3"></p><p><img src="https://i.loli.net/2019/10/23/82c7C5dImNarWpG.png" alt="4"></p><p>可以看到，当random参数的值被注入到session中后，集群中所有的节点都能够拿到session中的random的值，可见Session在集群中实现了共享 。我们可以看看redis存储session形式</p><p><img src="https://i.loli.net/2019/10/23/un2HNxPaIFwWLYT.png" alt="5"></p><p>到此我们已经解决了Session共享的问题。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/10/23/NnI78bo5HxtaFuQ.jpg&quot; alt=&quot;345.jpg&quot;&gt;&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="session" scheme="https://www.uliyu.com/tags/session/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装Redis</title>
    <link href="https://www.uliyu.com/2019/10/24/redis/"/>
    <id>https://www.uliyu.com/2019/10/24/redis/</id>
    <published>2019-10-24T13:37:39.000Z</published>
    <updated>2019-10-23T14:27:22.712Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/10/23/UVsHfElibMjuK71.jpg" alt="345.jpg"><br><a id="more"></a> </p><h1 id="Linux安装Redis"><a href="#Linux安装Redis" class="headerlink" title="Linux安装Redis"></a>Linux安装Redis</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu ~]# cd /usr/redis/</span><br><span class="line">[root@liyu redis]# wget http://download.redis.io/releases/redis-3.2.12.tar.gz</span><br></pre></td></tr></table></figure><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu redis]# tar -zxvf redis-3.2.12.tar.gz</span><br></pre></td></tr></table></figure><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu redis]# cd redis-3.2.12</span><br><span class="line">[root@liyu redis-3.2.12]# make</span><br></pre></td></tr></table></figure><h2 id="服务端启动"><a href="#服务端启动" class="headerlink" title="服务端启动"></a>服务端启动</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu redis-3.2.12]# ./src/redis-server redis.conf</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/10/23/dYAVsDzRuwKl3x5.png" alt="1"></p><h2 id="客户端连接"><a href="#客户端连接" class="headerlink" title="客户端连接"></a>客户端连接</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu redis-3.2.12]# ./src/redis-cli</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/10/23/wMpAsQNgrGOE3Xm.png" alt="22"></p><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">bind <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>  <span class="comment">//绑定ip，不绑定则注销掉即可</span></span><br><span class="line"><span class="keyword">protected</span>-mode yes <span class="comment">//关闭掉之后才能进行远程连接</span></span><br><span class="line">port <span class="number">6379</span> <span class="comment">//修改端口</span></span><br><span class="line">daemonize yes  <span class="comment">//是否后台启动</span></span><br><span class="line">databases <span class="number">16</span> <span class="comment">//数据库数</span></span><br><span class="line">save <span class="number">900</span> <span class="number">1</span> <span class="comment">//SNAPSHOTTING参数</span></span><br><span class="line">save <span class="number">300</span> <span class="number">10</span></span><br><span class="line">save <span class="number">60</span> <span class="number">10000</span></span><br><span class="line">requirepass foobared <span class="comment">//密码设置</span></span><br><span class="line">appendonly no <span class="comment">//是否开启aof</span></span><br></pre></td></tr></table></figure><h2 id="RedisDesktopManager连接"><a href="#RedisDesktopManager连接" class="headerlink" title="RedisDesktopManager连接"></a>RedisDesktopManager连接</h2><p>是一款功能强大的redis数据库管理软件，可以帮助用户轻松快速的查看与操控整个数据库</p><p><img src="https://i.loli.net/2019/10/23/LIqUJnNzRKpAYZC.png" alt="3"></p><p><img src="https://i.loli.net/2019/10/23/EriJLshmKXRCOlS.png" alt="4"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/10/23/UVsHfElibMjuK71.jpg&quot; alt=&quot;345.jpg&quot;&gt;&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="redis" scheme="https://www.uliyu.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>集群中Session问题场景</title>
    <link href="https://www.uliyu.com/2019/10/24/session/"/>
    <id>https://www.uliyu.com/2019/10/24/session/</id>
    <published>2019-10-24T13:37:03.000Z</published>
    <updated>2019-10-23T14:22:01.816Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/10/23/4WIe6FqLQoagC7B.jpg" alt="345.jpg"><br><a id="more"></a> </p><h1 id="集群中Session问题场景"><a href="#集群中Session问题场景" class="headerlink" title="集群中Session问题场景"></a>集群中Session问题场景</h1><h2 id="Cookie机制"><a href="#Cookie机制" class="headerlink" title="Cookie机制"></a>Cookie机制</h2><p>cookie是浏览器用来存储少量数据的一种机制，数据以”key/value“形式存储，浏览器发送http请求时自动附带cookie信息</p><h2 id="Session会话机制"><a href="#Session会话机制" class="headerlink" title="Session会话机制"></a>Session会话机制</h2><p>HTTP请求是无状态的，即HTTP协议并不能识别出上一个HTTP请求和下一个HTTP请求是否来自同一个用户<br>可以通过维持一个会话来判定用户：浏览器第一次请求服务器，服务器创建一个会话，并将会话的id作为响应的一部分发送给浏览器，浏览器存储会话id，并在后续第二次和第三次请求中带上会话id，服务器取得请求中的会话id就知道是不是同一个用户了<br>但是每次请求都携带会话id显然不靠谱，这时就可以通过cookie机制就实践会话id的传递</p><h2 id="Tomcat下的Cookie和HttpServletSession"><a href="#Tomcat下的Cookie和HttpServletSession" class="headerlink" title="Tomcat下的Cookie和HttpServletSession"></a>Tomcat下的Cookie和HttpServletSession</h2><p>浏览器第一次访问Tomcat时，Tomcat会创建一个HttpServletSession会话对象，同时创建一个名为JSESSIONID的Cookie对象，该cookie存储着当前HttpServletSession会话对象的id，可以通过这个id找到当前会话，从而实现了用户状态的保持。而Session对象存活时间默认等于30分钟或者浏览器的打开时间，在这段时间内，我们可以获取Session对象中存储的任何信息。这就是Tomcat下Cookie和Session机制</p><h3 id="修改SbController"><a href="#修改SbController" class="headerlink" title="修改SbController"></a>修改SbController</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liyu.sb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SbController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">(HttpServletRequest request)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="keyword">new</span> Date());</span><br><span class="line">            InetAddress addr = InetAddress.getLocalHost();</span><br><span class="line">            String ip=addr.getHostAddress().toString(); <span class="comment">//获取本机ip</span></span><br><span class="line">            String host=addr.getHostName().toString(); <span class="comment">//获取本机计算机名称</span></span><br><span class="line">            System.out.println(ip + <span class="string">" "</span> + host);</span><br><span class="line">            request.setAttribute(<span class="string">"ip"</span>,ip);</span><br><span class="line">            request.setAttribute(<span class="string">"host"</span>,host);</span><br><span class="line">            HttpSession session = request.getSession();</span><br><span class="line">            String random = request.getParameter(<span class="string">"random"</span>);</span><br><span class="line">            <span class="keyword">if</span>(StringUtils.hasText(random)) &#123;</span><br><span class="line">                session.setAttribute(<span class="string">"random"</span>, random);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;   </span><br><span class="line">        <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/helloNeely"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">helloNeely</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello Neely"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改index-html"><a href="#修改index-html" class="headerlink" title="修改index.html"></a>修改index.html</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span> xmlns:th=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Neely&lt;/title&gt;</span><br><span class="line">    &lt;script type="text/javascript" src="js/liyu.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Welcome To Neely<span class="string">'s Blog&lt;/h1&gt;</span></span><br><span class="line"><span class="string">主机:&lt;span th:text="$&#123;host&#125;" &gt;&lt;/span&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="string">ip:&lt;span th:text="$&#123;ip&#125;" &gt;&lt;/span&gt;&lt;/br&gt;</span></span><br><span class="line"><span class="string">session中random值：&lt;span th:text="$&#123;session.random&#125;" &gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;/br&gt;</span></span><br><span class="line"><span class="string">&lt;img src="img/liyu.jpg"&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><h3 id="重新打包部署项目到Tomcat集群"><a href="#重新打包部署项目到Tomcat集群" class="headerlink" title="重新打包部署项目到Tomcat集群"></a>重新打包部署项目到Tomcat集群</h3><p>参考前面文章</p><h3 id="启动Tomcat集群"><a href="#启动Tomcat集群" class="headerlink" title="启动Tomcat集群"></a>启动Tomcat集群</h3><h3 id="浏览器访问Nginxhttp-192-168-190-129-sb"><a href="#浏览器访问Nginxhttp-192-168-190-129-sb" class="headerlink" title="浏览器访问Nginxhttp://192.168.190.129/sb/"></a>浏览器访问Nginx<a href="http://192.168.190.129/sb/" target="_blank" rel="noopener">http://192.168.190.129/sb/</a></h3><p><img src="https://i.loli.net/2019/10/23/qcprLSM8IbuJYxN.png" alt="1"></p><p>因为是初次访问，session中并未设置random值，所以取不到值</p><p>携带random参数继续访问:</p><p><img src="https://i.loli.net/2019/10/23/tCdcNnwDZ4gbSV6.png" alt="2"></p><p>发现random存入了session中，而此时处理这个请求的Tomcat是在192.168.190.129上的Tomcat上</p><h3 id="继续访问Ngxin"><a href="#继续访问Ngxin" class="headerlink" title="继续访问Ngxin"></a>继续访问Ngxin</h3><p><a href="http://192.168.190.129/sb/" target="_blank" rel="noopener">http://192.168.190.129/sb/</a></p><p><img src="https://i.loli.net/2019/10/23/5UXh4TlxjYwtGCf.png" alt="3"></p><p><img src="https://i.loli.net/2019/10/23/OH4gW9yLojnquN8.png" alt="4"></p><p>访问发现我们之前存入session中的random的值没有了，而我们并没有关闭浏览器，且是在连续请求的情况下，session也不可能过期。就连当请求分配给129服务器上的Tomcat处理时也取不到random的值 。这是何故？？session到底去哪里了 </p><h2 id="seesion去哪里了"><a href="#seesion去哪里了" class="headerlink" title="seesion去哪里了"></a>seesion去哪里了</h2><p>当第一次打开浏览器请求并携带random参数时，请求分配给了129服务器上Tomcat，因为是第一次请求，这时Tomcat响应回来时创建了名为JSESSIONID的cookie并携带回来给了浏览器<br>当浏览器连续第二次请求时，请求分给130服务器上Tomcat处理了，并且携带那个JSESSIONID的cookie给了130服务器上Tomcat，不管此时是否携带random参数，当在接口请求响应回来时，130服务器Tomcat发现从名为JESESSIONID的cookie中获得的会话id并不能找到对应的HttpSession对象，所以130服务器上的Tomcat重新创建了一个HttpSession，并将新的会话id放入名为JESESSION的cookie中返回给了浏览器<br>当浏览器连续第二次请求时，请求又分给129服务器Tomcat处理了，又识别不了，又重新创建，又产生新的会话id返回给浏览器，不断重复此操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">所以，问题在于Tomcat找不到Session对象，因为Session对象都存放在各自的Tomcat容器中，所以集群中的<span class="number">2</span>台Tomcat容器找不到会话id对应的会话Session对象。所以得出结论：因为集群没有共享Session，所以导致会话的不断刷新，从而不能保持会话的状态。</span><br></pre></td></tr></table></figure><h2 id="如何处理"><a href="#如何处理" class="headerlink" title="如何处理:"></a>如何处理:</h2><p>我们可以通过使用Redis实现集群中的Session的共享 下篇分享</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/10/23/4WIe6FqLQoagC7B.jpg&quot; alt=&quot;345.jpg&quot;&gt;&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="集群" scheme="https://www.uliyu.com/tags/集群/"/>
    
    <category term="session" scheme="https://www.uliyu.com/tags/session/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat集群Ngixn负载均衡</title>
    <link href="https://www.uliyu.com/2019/10/23/fuzai/"/>
    <id>https://www.uliyu.com/2019/10/23/fuzai/</id>
    <published>2019-10-23T15:16:45.000Z</published>
    <updated>2019-10-22T15:20:26.883Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/10/22/5KO9faNJIAgibZe.jpg" alt="345.jpg"><br><a id="more"></a> </p><h1 id="Tomcat集群Ngixn负载均衡"><a href="#Tomcat集群Ngixn负载均衡" class="headerlink" title="Tomcat集群Ngixn负载均衡"></a>Tomcat集群Ngixn负载均衡</h1><h2 id="一、搭建Tomcat集群"><a href="#一、搭建Tomcat集群" class="headerlink" title="一、搭建Tomcat集群"></a>一、搭建Tomcat集群</h2><h3 id="1-部署架构"><a href="#1-部署架构" class="headerlink" title="1.部署架构"></a>1.部署架构</h3><ul><li>192.168.190.129：Tomcat1</li><li>192.168.190.130：Tomcat2</li></ul><h3 id="2-修改项目"><a href="#2-修改项目" class="headerlink" title="2.修改项目"></a>2.修改项目</h3><p>修改SbController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liyu.sb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SbController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">(HttpServletRequest request)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="keyword">new</span> Date());</span><br><span class="line">            InetAddress addr = InetAddress.getLocalHost();</span><br><span class="line">            String ip=addr.getHostAddress().toString(); <span class="comment">//获取本机ip</span></span><br><span class="line">            String host=addr.getHostName().toString(); <span class="comment">//获取本机计算机名称</span></span><br><span class="line">            System.out.println(ip + <span class="string">" "</span> + host);</span><br><span class="line">            request.setAttribute(<span class="string">"ip"</span>,ip);</span><br><span class="line">            request.setAttribute(<span class="string">"host"</span>,host);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/helloNeely"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">helloNeely</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello Neely"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改index.html</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span> xmlns:th=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Neely&lt;/title&gt;</span><br><span class="line">    &lt;script type="text/javascript" src="js/liyu.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Welcome To Neely<span class="string">'s Blog&lt;/h1&gt;</span></span><br><span class="line"><span class="string">&lt;span th:text="$&#123;host&#125;" &gt;&lt;/span&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="string">&lt;span th:text="$&#123;ip&#125;" &gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;img src="img/liyu.jpg"&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p>修改pom文件</p><p>设置打包包名</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;project xmlns=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">         xsi:schemaLocation=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.1.8.RELEASE&lt;/version&gt;</span><br><span class="line">        &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line">    &lt;groupId&gt;com.liyu&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;sb&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;packaging&gt;war&lt;/packaging&gt;</span><br><span class="line">    &lt;name&gt;sb&lt;/name&gt;</span><br><span class="line">    &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--&lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">            &lt;optional&gt;true&lt;/optional&gt;</span><br><span class="line">        &lt;/dependency&gt;--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;finalName&gt;sb&lt;/finalName&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure><h3 id="3-部署项目到tomcat集群"><a href="#3-部署项目到tomcat集群" class="headerlink" title="3.部署项目到tomcat集群"></a>3.部署项目到tomcat集群</h3><p>打包项目—上传war包tomcat集群—启动tomcat</p><p>访问</p><p><img src="https://i.loli.net/2019/10/22/koIwcYWP4AmyJuS.png" alt="1"></p><p><img src="https://i.loli.net/2019/10/22/CSjat3gTGP1Ibfz.png" alt="2"></p><p>可以看到2台服务器上的Tomcat都可以访问，同时在访问我们的项目的时候，都在页面显示出了Tomcat所在服务器本地的主机名和ip；这个就是同一个项目部署到集群的不同服务器中为用户提供服务；但是到目前为止，这两台服务器还是通过不同的访问地址才能访问得到，而我们需要得到的效果是访问同一地址，2台Tomcat都同时为用户提供服务，这里就需要我们的Nginx来做反向代理，实现Tomcat集群的负载均衡</p><h2 id="二、配置Nginx反向代理"><a href="#二、配置Nginx反向代理" class="headerlink" title="二、配置Nginx反向代理"></a>二、配置Nginx反向代理</h2><h3 id="1-修改nginx-conf文件"><a href="#1-修改nginx-conf文件" class="headerlink" title="1.修改nginx.conf文件"></a>1.修改nginx.conf文件</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu ~]# cd /usr/local/nginx/conf/</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  <span class="number">65</span>;</span><br><span class="line">    upstream liyu.com &#123;</span><br><span class="line">        server <span class="number">192.168</span><span class="number">.190</span><span class="number">.129</span>:<span class="number">8080</span>;</span><br><span class="line">        server <span class="number">192.168</span><span class="number">.190</span><span class="number">.130</span>:<span class="number">8080</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       <span class="number">80</span>;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        #配置静态资源交给nginx处理，这里先只配置js和jpg</span><br><span class="line">        #location ~ .*\.(js|jpg) &#123;</span><br><span class="line">        #    root /usr/nginx/liyu; #静态文件目录</span><br><span class="line">        #    expires 30d; #缓存天数</span><br><span class="line">        #&#125;</span><br><span class="line">        #配置除静态资源以外的交给tomcat处理</span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass http:<span class="comment">//liyu.com;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /<span class="number">50</span>x.html;</span><br><span class="line">        location = /<span class="number">50</span>x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重新加载配置文件</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu ~]# cd /usr/local/nginx/sbin/</span><br><span class="line">[root@liyu sbin]# ./nginx -s reload</span><br></pre></td></tr></table></figure><h3 id="2-访问http-192-168-190-129-sb"><a href="#2-访问http-192-168-190-129-sb" class="headerlink" title="2.访问http://192.168.190.129/sb/"></a>2.访问<a href="http://192.168.190.129/sb/" target="_blank" rel="noopener">http://192.168.190.129/sb/</a></h3><p><img src="https://i.loli.net/2019/10/22/4CIhXaWY2mQu8VA.png" alt="3"></p><p>再次刷新访问</p><p><img src="https://i.loli.net/2019/10/22/14ncbAukpSzEy6W.png" alt="4"></p><p>我们可以发现2次访问同一个地址，但返回的内容却不同，因为分别是2台不同的Tomcat处理动态的接口请求并返回html文档内容，而文档内容中动态渲染了Tomcat所在主机的主机名和ip，所以我们看到了不同的内容；</p><p>而静态资源只在Nginx所在的192.168.190.129服务器上部署了一份。到这里就充分看到了Nginx集成Tomcat实现动静分离的好处以及Nginx对Tomcat横向拓展的负载均衡的技术支持 </p><h2 id="三、容错机制"><a href="#三、容错机制" class="headerlink" title="三、容错机制"></a>三、容错机制</h2><p>我们将192.168.190.130tomcat服务停掉</p><p><img src="https://i.loli.net/2019/10/22/b3e2tOr9nzwvTWd.png" alt="5"></p><p>再访问Nginx，发现不影响应用的使用，只是请求分发时不再分配到已经宕机的Tomcat上了，这里就是Nginx的upstream所实现的容错机制，这样就可以实现web服务的7*24小时不间断服务。以上架构足以解决大中型网站的高并发访问。Nginx反向代理，Tomcat横向拓展集群，Nginx处理静态内容，Tomcat处理动态接口请求，Nginx负责动态请求的负载均衡分配，Nginx容错机制实现高可用。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/10/22/5KO9faNJIAgibZe.jpg&quot; alt=&quot;345.jpg&quot;&gt;&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="负载均衡" scheme="https://www.uliyu.com/tags/负载均衡/"/>
    
    <category term="集群" scheme="https://www.uliyu.com/tags/集群/"/>
    
  </entry>
  
  <entry>
    <title>Nginx Tomcat实现动静分离</title>
    <link href="https://www.uliyu.com/2019/10/22/ntfl/"/>
    <id>https://www.uliyu.com/2019/10/22/ntfl/</id>
    <published>2019-10-22T13:48:05.000Z</published>
    <updated>2019-10-22T15:04:54.150Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/10/22/ED4bWajHeunr7sF.jpg" alt="ntfl.jpg"><br><a id="more"></a> </p><h1 id="Nginx-Tomcat实现动静分离"><a href="#Nginx-Tomcat实现动静分离" class="headerlink" title="Nginx Tomcat实现动静分离"></a>Nginx Tomcat实现动静分离</h1><h2 id="一、为什么要动静分离"><a href="#一、为什么要动静分离" class="headerlink" title="一、为什么要动静分离"></a>一、为什么要动静分离</h2><ul><li>动静分离是将网站静态资源（HTML，JavaScript，CSS，img等文件）与后台应用分开部署</li><li><p>动静分离的一种做法是将静态资源部署在nginx上，后台项目部署到应用服务器上，根据一定规则使对静态资源的请求全部交给nginx处理，而讲动态请求转发给应用服务器处理，达到动静分离的目标，从而提高网站的并发性能，达到优化网站架构的效果</p></li><li><p>静态文件访问量大，服务器负载高，I/O问题导致用户访问卡顿</p></li><li>静态文件数量大，服务器存储空间不够</li><li>静态文件用户访问量大，且分布在各地</li><li>移动更新包在某个时间段需要高速下载，且并发下载量高</li></ul><p><img src="https://i.loli.net/2019/10/22/HZGuPDw1JgCyMfA.png" alt="1"></p><h3 id="二、实现步骤"><a href="#二、实现步骤" class="headerlink" title="二、实现步骤"></a>二、实现步骤</h3><h3 id="1-修改项目"><a href="#1-修改项目" class="headerlink" title="1.修改项目"></a>1.修改项目</h3><p>修改项目下的index.html，添加img标签和js引入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Neely&lt;/title&gt;</span><br><span class="line">    &lt;script type="text/javascript" src="js/liyu.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Welcome To Neely<span class="string">'s Blog&lt;/h1&gt;</span></span><br><span class="line"><span class="string">&lt;img src="img/liyu.jpg"&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/10/22/xIVZuNo9JQmCSds.png" alt="2"></p><p>将项目打包部署到之前搭建的Tomcat服务器中并启动，通过浏览器访问：</p><p><a href="http://192.168.190.129:8080/sb-0.0.1-SNAPSHOT/" target="_blank" rel="noopener">http://192.168.190.129:8080/sb-0.0.1-SNAPSHOT/</a></p><p><img src="https://i.loli.net/2019/10/22/ZAL1Jou5dNMQisU.png" alt="3"></p><h3 id="2-配置nginx-conf"><a href="#2-配置nginx-conf" class="headerlink" title="2.配置nginx.conf"></a>2.配置nginx.conf</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       <span class="number">80</span>;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        #配置静态资源交给nginx处理，这里先只配置js和jpg</span><br><span class="line">        location ~ .*\.(js|jpg) &#123;</span><br><span class="line">            root /usr/nginx/liyu; #静态文件目录</span><br><span class="line">            expires 30d; #缓存天数</span><br><span class="line">        &#125;</span><br><span class="line">        #配置除静态资源以外的交给tomcat处理</span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass http:<span class="comment">//localhost:8080/sb-0.0.1-SNAPSHOT/;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /<span class="number">50</span>x.html;</span><br><span class="line">        location = /<span class="number">50</span>x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重新启动nginx访问</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu ~]# cd /usr/local/nginx/sbin/</span><br><span class="line">[root@liyu sbin]# ./nginx -s reload</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/10/22/vmTdLN7AhlVUZnY.png" alt="4"></p><p>这里就是用nginx进行了反向代理；但是也发现了获取不到liyu.js和liyu.jpg文件，那是因为nginx配置了静态资源的路径，而该路径下没有该资源导致的，将对应资源上传到指定位置即可，在nginx.conf文件中的配置的静态资源路径为：/usr/nginx/liyu</p><h3 id="3-上传静态资源到指定路径"><a href="#3-上传静态资源到指定路径" class="headerlink" title="3.上传静态资源到指定路径"></a>3.上传静态资源到指定路径</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu /]# cd /usr/nginx/liyu</span><br><span class="line">[root@liyu liyu]# mkdir img</span><br><span class="line">[root@liyu liyu]# mkdir js</span><br><span class="line">[root@liyu liyu]# ll</span><br><span class="line">总用量 <span class="number">0</span></span><br><span class="line">drwxr-xr-x. <span class="number">2</span> root root <span class="number">6</span> <span class="number">10</span>月  <span class="number">5</span> <span class="number">17</span>:<span class="number">57</span> img</span><br><span class="line">drwxr-xr-x. <span class="number">2</span> root root <span class="number">6</span> <span class="number">10</span>月  <span class="number">5</span> <span class="number">17</span>:<span class="number">57</span> js</span><br><span class="line">[root@liyu liyu]# cd img</span><br><span class="line">[root@liyu img]# ll</span><br><span class="line">总用量 <span class="number">28</span></span><br><span class="line">-rw-r--r--. <span class="number">1</span> root root <span class="number">27192</span> <span class="number">10</span>月  <span class="number">5</span> <span class="number">17</span>:<span class="number">58</span> liyu.jpg</span><br><span class="line">[root@liyu img]# cd ../js</span><br><span class="line">[root@liyu js]# ll</span><br><span class="line">总用量 <span class="number">4</span></span><br><span class="line">-rw-r--r--. <span class="number">1</span> root root <span class="number">1163</span> <span class="number">10</span>月  <span class="number">5</span> <span class="number">17</span>:<span class="number">58</span> liyu.js</span><br><span class="line">[root@liyu js]#</span><br></pre></td></tr></table></figure><h3 id="4-重新访问"><a href="#4-重新访问" class="headerlink" title="4.重新访问"></a>4.重新访问</h3><p><img src="https://i.loli.net/2019/10/22/Na4lofHTvmqICjg.png" alt="5"></p><p>到这里就实现了Nginx和Tomcat的集成，实现了web服务的动静分离，将静态资源交给Nginx处理，这里是将静态资源存储在本地，通过Nginx访问，当然也可以代理到其他静态服务器上；再将非静态资源的请求代理给Tomcat动态处理。这样即削减了Tomcat的压力，又发挥了Nginx高并发的能力，使web服务更加健壮。但是这里只是配置了单台Tomcat，当动态请求过多时，一台Tomcat服务器肯定是不足以处理足够多的动态请求的。后面将搭建Tomcat集群，通过横向拓展实现Tomcat的高并发。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/10/22/ED4bWajHeunr7sF.jpg&quot; alt=&quot;ntfl.jpg&quot;&gt;&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="Nginx" scheme="https://www.uliyu.com/tags/Nginx/"/>
    
    <category term="Tomcat" scheme="https://www.uliyu.com/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>初识Nginx到安装</title>
    <link href="https://www.uliyu.com/2019/10/22/nginxs/"/>
    <id>https://www.uliyu.com/2019/10/22/nginxs/</id>
    <published>2019-10-22T13:47:47.000Z</published>
    <updated>2019-10-22T15:05:26.551Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/10/22/wd6gAJElQWG8I7F.jpg" alt="nginxs.jpg"><br><a id="more"></a> </p><h1 id="初识Nginx到-安装"><a href="#初识Nginx到-安装" class="headerlink" title="初识Nginx到 安装"></a>初识Nginx到 安装</h1><p>再遇Nginx，之前也有写过一篇。美得如你</p><h2 id="一、Nginx是什么"><a href="#一、Nginx是什么" class="headerlink" title="一、Nginx是什么"></a>一、Nginx是什么</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Nginx (engine x) 是一个高性能的HTTP和反向代理服务器，也是一个IMAP/POP3/SMTP服务器。因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名</span><br></pre></td></tr></table></figure><h2 id="二、Ngxin特性"><a href="#二、Ngxin特性" class="headerlink" title="二、Ngxin特性"></a>二、Ngxin特性</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">作为 Web 服务器：相比 Apache，Nginx 使用更少的资源，支持更多的并发连接，体现更高的效率，这点使 Nginx 尤其受到虚拟主机提供商的欢迎。能够支持高达 <span class="number">50</span>,<span class="number">000</span> 个并发连接数的响应</span><br><span class="line">作为负载均衡服务器：Nginx 既可以在内部直接支持 Rails 和 PHP，也可以支持作为 HTTP代理服务器 对外进行服务。Nginx 用 C 编写, 不论是系统资源开销还是 CPU 使用效率都比 Perlbal 要好的多。</span><br><span class="line">作为邮件代理服务器: Nginx 同时也是一个非常优秀的邮件代理服务器(最早开发这个产品的目的之一也是作为邮件代理服务器)，Last.fm 描述了成功并且美妙的使用经验。</span><br></pre></td></tr></table></figure><p>总体来说：<br>1.稳定性高<br>2.系统资源消耗低<br>3.对HTTP并发连接的处理能力高</p><h2 id="三、应用场景"><a href="#三、应用场景" class="headerlink" title="三、应用场景"></a>三、应用场景</h2><h3 id="1-HTTP服务器"><a href="#1-HTTP服务器" class="headerlink" title="1.HTTP服务器"></a>1.HTTP服务器</h3><p>首先，Nginx是一个HTTP服务器，可以将服务器上的静态文件（如HTML、图片）通过HTTP协议展现给客户端。<br>配置:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80; # 端口号</span><br><span class="line">location / &#123;</span><br><span class="line">root /usr/share/nginx/html; # 静态文件路径</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-反向代理服务器"><a href="#2-反向代理服务器" class="headerlink" title="2.反向代理服务器"></a>2.反向代理服务器</h3><p>反向代理（Reverse Proxy）方式是指以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器<br>简单来说就是:代理服务器代理外部Internet主机对内部网络的连接请求。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen <span class="number">80</span>;</span><br><span class="line">  location / &#123;</span><br><span class="line"> proxy_pass http:<span class="comment">//192.168.20.1:8080; # 应用服务器HTTP地址</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>既然服务器可以直接HTTP访问，为什么要在中间加上一个反向代理，不是多此一举吗？反向代理有什么作用？继续往下看，下面的负载均衡、虚拟主机，都基于反向代理实现，当然反向代理的功能也不仅仅是这些。</p><h3 id="3-负载均衡"><a href="#3-负载均衡" class="headerlink" title="3.负载均衡"></a>3.负载均衡</h3><p>当我们的网站访问量越来越大的时候。导致服务器压力增大，网站越来越慢，一台服务器已经不够用了。于是将相同的应用部署在多台服务器上，将大量用户的请求分配给多台机器处理。同时带来的好处是，其中一台服务器万一挂了，只要还有其他服务器正常运行，就不会影响用户使用。</p><p>作用:</p><ul><li>1.将访问流量分配到多台服务器进行负载分担的服务。</li><li>2.消除单点故障</li><li>3.提升服务性能</li></ul><p>Nginx负载均衡算法：</p><p><strong>1.round-robin（轮询）</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">http  &#123;</span><br><span class="line">    upstream  cluster1 &#123;</span><br><span class="line">        server  第<span class="number">1</span>台网站服务器IP;</span><br><span class="line">        server  第<span class="number">2</span>台网站服务器IP;</span><br><span class="line">…</span><br><span class="line"> server  第n台网站服务器IP;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    server  &#123;</span><br><span class="line">        listen  <span class="number">80</span>;</span><br><span class="line"> </span><br><span class="line">        location  /  &#123;</span><br><span class="line">            proxy_pass  http:<span class="comment">//cluster1;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.weighted（权重）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">http  &#123;</span><br><span class="line">    upstream  cluster1 &#123;</span><br><span class="line">        server  第1台网站服务器IP weight=3;</span><br><span class="line">        server  第2台网站服务器IP weight=4;</span><br><span class="line">…</span><br><span class="line">server  第n台网站服务器IP weight=10;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    server  &#123;</span><br><span class="line">        listen  80;</span><br><span class="line"> </span><br><span class="line">        location  /  &#123;</span><br><span class="line">            proxy_pass  http://cluster1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3.least-connected（最少连接数）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">http  &#123;</span><br><span class="line">    upstream  cluster1 &#123;</span><br><span class="line"> least_conn;</span><br><span class="line">        server  第1台网站服务器IP;</span><br><span class="line">        server  第2台网站服务器IP;</span><br><span class="line">…</span><br><span class="line"> server  第n台网站服务器IP;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    server  &#123;</span><br><span class="line">        listen  80;</span><br><span class="line"> </span><br><span class="line">        location  /  &#123;</span><br><span class="line">            proxy_pass  http://cluster1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4.ip-hash（IP哈希）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">http  &#123;</span><br><span class="line">    upstream  cluster1 &#123;</span><br><span class="line">   ip_hash;</span><br><span class="line">        server  第1台网站服务器IP;</span><br><span class="line">        server  第2台网站服务器IP;</span><br><span class="line">…</span><br><span class="line"> server  第n台网站服务器IP;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    server  &#123;</span><br><span class="line">        listen  80;</span><br><span class="line"> </span><br><span class="line">        location  /  &#123;</span><br><span class="line">            proxy_pass  http://cluster1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-虚拟主机"><a href="#4-虚拟主机" class="headerlink" title="4.虚拟主机"></a>4.虚拟主机</h3><p>比如说有的网站，由于访问量太小，没钱，节省点成本，将多个网站部署在同一台服务器上，例如将<a href="http://www.aaa.com" target="_blank" rel="noopener">www.aaa.com</a> 和 <a href="http://www.bbb.com" target="_blank" rel="noopener">www.bbb.com</a> 两个网站部署在同一台服务器上，两个域名解析到同一个IP地址，但是用户通过两个域名却可以打开两个完全不同的网站，互相不影响，就像访问两个服务器一样，所以叫两个虚拟主机。<br>配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80 default_server;</span><br><span class="line">server_name _;</span><br><span class="line">return 444; # 过滤其他域名的请求，返回444状态码</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name www.aaa.com; # www.aaa.com域名</span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://localhost:8080; # 对应端口号8080</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name www.bbb.com; # www.bbb.com域名</span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://localhost:8081; # 对应端口号8081</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、Linux安装Ngxin"><a href="#四、Linux安装Ngxin" class="headerlink" title="四、Linux安装Ngxin"></a>四、Linux安装Ngxin</h2><h3 id="1-编译Nginx所需依赖"><a href="#1-编译Nginx所需依赖" class="headerlink" title="1.编译Nginx所需依赖"></a>1.编译Nginx所需依赖</h3><table><thead><tr><th>依赖</th><th><strong>功用</strong></th></tr></thead><tbody><tr><td>pcre</td><td>解决C语言中使用正则表达式的问题，rewrite模块需要 pcre 库</td></tr><tr><td>zlib</td><td>通用的压缩库，gzip模块需要 zlib 库</td></tr><tr><td>openssl</td><td>提供了丰富的加密解密的相关功能，ssl 功能需要openssl库</td></tr><tr><td>perl</td><td>openssl的编译需要perl</td></tr><tr><td>gcc</td><td>nginx的编译需要gcc</td></tr></tbody></table><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu /]# yum -y install gcc perl zlib pcre-devel openssl openssl-devel</span><br></pre></td></tr></table></figure><h3 id="2-获取nginx包"><a href="#2-获取nginx包" class="headerlink" title="2.获取nginx包"></a>2.获取nginx包</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu nginx]# wget http://nginx.org/download/nginx-1.14.0.tar.gz</span><br></pre></td></tr></table></figure><h3 id="3-解压"><a href="#3-解压" class="headerlink" title="3.解压"></a>3.解压</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu nginx]# tar -zxvf nginx-1.14.0.tar.gz</span><br></pre></td></tr></table></figure><h3 id="4-编译安装"><a href="#4-编译安装" class="headerlink" title="4.编译安装"></a>4.编译安装</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu nginx]# cd nginx-1.14.0</span><br><span class="line">[root@liyu nginx-1.14.0]# ./configure</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/10/22/DjXlFOAVM4avpIE.png" alt="1"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu nginx]# make install</span><br></pre></td></tr></table></figure><h3 id="5-启动Nginx"><a href="#5-启动Nginx" class="headerlink" title="5.启动Nginx"></a>5.启动Nginx</h3><p>默认安装路径为：/usr/local/nginx</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu nginx-1.14.0]# cd /usr/local</span><br><span class="line">[root@liyu local]# ll</span><br><span class="line">总用量 <span class="number">0</span></span><br><span class="line">drwxr-xr-x. <span class="number">2</span> root root  <span class="number">6</span> <span class="number">4</span>月  <span class="number">11</span> <span class="number">2018</span> bin</span><br><span class="line">drwxr-xr-x. <span class="number">2</span> root root  <span class="number">6</span> <span class="number">4</span>月  <span class="number">11</span> <span class="number">2018</span> etc</span><br><span class="line">drwxr-xr-x. <span class="number">2</span> root root  <span class="number">6</span> <span class="number">4</span>月  <span class="number">11</span> <span class="number">2018</span> games</span><br><span class="line">drwxr-xr-x. <span class="number">2</span> root root  <span class="number">6</span> <span class="number">4</span>月  <span class="number">11</span> <span class="number">2018</span> include</span><br><span class="line">drwxr-xr-x. <span class="number">2</span> root root  <span class="number">6</span> <span class="number">4</span>月  <span class="number">11</span> <span class="number">2018</span> lib</span><br><span class="line">drwxr-xr-x. <span class="number">2</span> root root  <span class="number">6</span> <span class="number">4</span>月  <span class="number">11</span> <span class="number">2018</span> lib64</span><br><span class="line">drwxr-xr-x. <span class="number">2</span> root root  <span class="number">6</span> <span class="number">4</span>月  <span class="number">11</span> <span class="number">2018</span> libexec</span><br><span class="line">drwxr-xr-x. <span class="number">6</span> root root <span class="number">50</span> <span class="number">9</span>月  <span class="number">29</span> <span class="number">19</span>:<span class="number">28</span> nginx</span><br><span class="line">drwxr-xr-x. <span class="number">2</span> root root  <span class="number">6</span> <span class="number">4</span>月  <span class="number">11</span> <span class="number">2018</span> sbin</span><br><span class="line">drwxr-xr-x. <span class="number">5</span> root root <span class="number">46</span> <span class="number">4</span>月  <span class="number">11</span> <span class="number">2018</span> share</span><br><span class="line">drwxr-xr-x. <span class="number">2</span> root root  <span class="number">6</span> <span class="number">4</span>月  <span class="number">11</span> <span class="number">2018</span> src</span><br><span class="line">[root@liyu local]# cd nginx</span><br><span class="line">[root@liyu nginx]# ll</span><br><span class="line">总用量 <span class="number">4</span></span><br><span class="line">drwxr-xr-x. <span class="number">2</span> root root <span class="number">4096</span> <span class="number">9</span>月  <span class="number">29</span> <span class="number">19</span>:<span class="number">28</span> conf</span><br><span class="line">drwxr-xr-x. <span class="number">2</span> root root   <span class="number">38</span> <span class="number">9</span>月  <span class="number">29</span> <span class="number">19</span>:<span class="number">28</span> html</span><br><span class="line">drwxr-xr-x. <span class="number">2</span> root root    <span class="number">6</span> <span class="number">9</span>月  <span class="number">29</span> <span class="number">19</span>:<span class="number">28</span> logs</span><br><span class="line">drwxr-xr-x. <span class="number">2</span> root root   <span class="number">18</span> <span class="number">9</span>月  <span class="number">29</span> <span class="number">19</span>:<span class="number">28</span> sbin</span><br><span class="line">[root@liyu nginx]# cd sbin</span><br><span class="line">[root@liyu sbin]# ll</span><br><span class="line">总用量 <span class="number">3660</span></span><br><span class="line">-rwxr-xr-x. <span class="number">1</span> root root <span class="number">3746344</span> <span class="number">9</span>月  <span class="number">29</span> <span class="number">19</span>:<span class="number">28</span> nginx</span><br><span class="line">[root@liyu sbin]# ./nginx </span><br><span class="line">[root@liyu sbin]# ps -ef|grep nginx</span><br><span class="line">root       <span class="number">6110</span>      <span class="number">1</span>  <span class="number">0</span> <span class="number">19</span>:<span class="number">30</span> ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> nginx: master process ./nginx</span><br><span class="line">nobody     <span class="number">6111</span>   <span class="number">6110</span>  <span class="number">0</span> <span class="number">19</span>:<span class="number">30</span> ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> nginx: worker process</span><br><span class="line">root       <span class="number">6113</span>   <span class="number">3200</span>  <span class="number">0</span> <span class="number">19</span>:<span class="number">30</span> pts/<span class="number">0</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> grep --color=auto nginx</span><br><span class="line">[root@liyu sbin]#</span><br></pre></td></tr></table></figure><h3 id="6-访问"><a href="#6-访问" class="headerlink" title="6.访问"></a>6.访问</h3><p><img src="https://i.loli.net/2019/10/22/5EGOIXSxCQd1uMZ.png" alt="2"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/10/22/wd6gAJElQWG8I7F.jpg&quot; alt=&quot;nginxs.jpg&quot;&gt;&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="Nginx" scheme="https://www.uliyu.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>基于Apache Bench对网站进行压力测试</title>
    <link href="https://www.uliyu.com/2019/10/22/abyl/"/>
    <id>https://www.uliyu.com/2019/10/22/abyl/</id>
    <published>2019-10-22T13:47:19.000Z</published>
    <updated>2019-10-22T15:04:22.281Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/10/22/uMVLGs9ypZEzrva.jpg" alt="abyl.jpg"><br><a id="more"></a> </p><h1 id="基于Apache-Bench对网站进行压力测试"><a href="#基于Apache-Bench对网站进行压力测试" class="headerlink" title="基于Apache Bench对网站进行压力测试"></a>基于Apache Bench对网站进行压力测试</h1><h2 id="1-安装Apache-Bench"><a href="#1-安装Apache-Bench" class="headerlink" title="1.安装Apache Bench"></a>1.安装Apache Bench</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu ~]# yum -y install httpd</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/10/22/6ebhzqljIYLyKZF.png" alt="1"></p><p>查看版本</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu ~]# httpd -version</span><br><span class="line">Server version: Apache/<span class="number">2.4</span><span class="number">.6</span> (CentOS)</span><br><span class="line">Server built:   Aug  <span class="number">8</span> <span class="number">2019</span> <span class="number">11</span>:<span class="number">41</span>:<span class="number">18</span></span><br><span class="line">[root@liyu ~]#</span><br></pre></td></tr></table></figure><h2 id="2-模拟并发"><a href="#2-模拟并发" class="headerlink" title="2.模拟并发"></a>2.模拟并发</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu bin]# ab -k -n 10000 -c 1000 http://192.168.190.129:8080/sb-0.0.1-SNAPSHOT/</span><br><span class="line">表示：总共产生<span class="number">10000</span>个请求，每次并发请求<span class="number">1000</span>个，访问http:<span class="comment">//192.168.190.129:8080/sb-0.0.1-SNAPSHOT/</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu bin]# ab -k -n 10000 -c 1000 http://192.168.190.129:8080/sb-0.0.1-SNAPSHOT/</span><br><span class="line">This is ApacheBench, Version <span class="number">2.3</span> &lt;$Revision: <span class="number">1430300</span> $&gt;</span><br><span class="line">Copyright <span class="number">1996</span> Adam Twiss, Zeus Technology Ltd, http:<span class="comment">//www.zeustech.net/</span></span><br><span class="line">Licensed to The Apache Software Foundation, http:<span class="comment">//www.apache.org/</span></span><br><span class="line"></span><br><span class="line">Benchmarking <span class="number">192.168</span><span class="number">.190</span><span class="number">.129</span> (be patient)</span><br><span class="line">Completed <span class="number">1000</span> requests</span><br><span class="line">Completed <span class="number">2000</span> requests</span><br><span class="line">Completed <span class="number">3000</span> requests</span><br><span class="line">Completed <span class="number">4000</span> requests</span><br><span class="line">Completed <span class="number">5000</span> requests</span><br><span class="line">Completed <span class="number">6000</span> requests</span><br><span class="line">Completed <span class="number">7000</span> requests</span><br><span class="line">Completed <span class="number">8000</span> requests</span><br><span class="line">Completed <span class="number">9000</span> requests</span><br><span class="line">Completed <span class="number">10000</span> requests</span><br><span class="line">Finished <span class="number">10000</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Server Software:        </span><br><span class="line">Server Hostname:        <span class="number">192.168</span><span class="number">.190</span><span class="number">.129</span></span><br><span class="line">Server Port:            <span class="number">8080</span></span><br><span class="line"></span><br><span class="line">Document Path:          /sb-<span class="number">0.0</span><span class="number">.1</span>-SNAPSHOT/</span><br><span class="line">Document Length:        <span class="number">164</span> bytes</span><br><span class="line"></span><br><span class="line">Concurrency Level:      <span class="number">1000</span></span><br><span class="line">Time taken <span class="keyword">for</span> tests:   <span class="number">7.246</span> seconds</span><br><span class="line">Complete requests:      <span class="number">10000</span></span><br><span class="line">Failed requests:        <span class="number">0</span></span><br><span class="line">Write errors:           <span class="number">0</span></span><br><span class="line">Keep-Alive requests:    <span class="number">0</span></span><br><span class="line">Total transferred:      <span class="number">3010000</span> bytes</span><br><span class="line">HTML transferred:       <span class="number">1640000</span> bytes</span><br><span class="line">Requests per second:    1379.98 [#/sec] (mean)</span><br><span class="line">Time per request:       <span class="number">724.650</span> [ms] (mean)</span><br><span class="line">Time per request:       <span class="number">0.725</span> [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          <span class="number">405.64</span> [Kbytes/sec] received</span><br><span class="line"></span><br><span class="line"><span class="function">Connection <span class="title">Times</span> <span class="params">(ms)</span></span></span><br><span class="line"><span class="function">              min  mean[+/-sd] median   max</span></span><br><span class="line"><span class="function">Connect:        0  167 545.5      2    3013</span></span><br><span class="line"><span class="function">Processing:    15  510 561.8    296    2952</span></span><br><span class="line"><span class="function">Waiting:        2  497 535.9    294    2675</span></span><br><span class="line"><span class="function">Total:         15  677 805.6    333    5959</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">Percentage of the requests served within a certain <span class="title">time</span> <span class="params">(ms)</span></span></span><br><span class="line"><span class="function">  50%    333</span></span><br><span class="line"><span class="function">  66%    509</span></span><br><span class="line"><span class="function">  75%    748</span></span><br><span class="line"><span class="function">  80%    971</span></span><br><span class="line"><span class="function">  90%   1939</span></span><br><span class="line"><span class="function">  95%   2407</span></span><br><span class="line"><span class="function">  98%   3384</span></span><br><span class="line"><span class="function">  99%   3583</span></span><br><span class="line"><span class="function"> 100%   5959 <span class="params">(longest request)</span></span></span><br><span class="line"><span class="function">[root@liyu bin]#</span></span><br></pre></td></tr></table></figure><p>查看日志</p><p><img src="https://i.loli.net/2019/10/22/5VjtFcQdyJiL1CN.png" alt="3"></p><p><img src="https://i.loli.net/2019/10/22/VkCP1d7zFHG3qRa.png" alt="2"></p><p>这里执行执行了两次并发 日志行数2w+ 模拟成功</p><h2 id="3-Apache-Bench命令参数"><a href="#3-Apache-Bench命令参数" class="headerlink" title="3.Apache Bench命令参数"></a>3.Apache Bench命令参数</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ab [options] [http:<span class="comment">//]hostname[:port]/path</span></span><br></pre></td></tr></table></figure><p>options有很多参数选项，常用的有-n和-c，可以通过ab -help获得所有参数类型和解释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu bin]# ab -help</span><br><span class="line">Usage: ab [options] [http[s]:<span class="comment">//]hostname[:port]/path</span></span><br><span class="line">Options are:</span><br><span class="line">    -n requests     Number of requests to perform</span><br><span class="line">    -c concurrency  Number of multiple requests to make at a time</span><br><span class="line">    -t timelimit    Seconds to max. to spend on benchmarking</span><br><span class="line">                    This implies -n <span class="number">50000</span></span><br><span class="line">    -s timeout      Seconds to max. wait <span class="keyword">for</span> each response</span><br><span class="line">                    Default is <span class="number">30</span> seconds</span><br><span class="line">    -b windowsize   Size of TCP send/receive buffer, in bytes</span><br><span class="line">    -B address      Address to bind to when making outgoing connections</span><br><span class="line">    -p postfile     File containing data to POST. Remember also to set -T</span><br><span class="line">    -u putfile      File containing data to PUT. Remember also to set -T</span><br><span class="line">    -T content-type Content-type header to use <span class="keyword">for</span> POST/PUT data, eg.</span><br><span class="line">                    <span class="string">'application/x-www-form-urlencoded'</span></span><br><span class="line">                    Default is <span class="string">'text/plain'</span></span><br><span class="line">    -v verbosity    How much troubleshooting info to print</span><br><span class="line">    -w              Print out results in HTML tables</span><br><span class="line">    -i              Use HEAD instead of GET</span><br><span class="line">    -x attributes   String to insert as table attributes</span><br><span class="line">    -y attributes   String to insert as tr attributes</span><br><span class="line">    -z attributes   String to insert as td or th attributes</span><br><span class="line">    -C attribute    Add cookie, eg. <span class="string">'Apache=1234'</span>. (repeatable)</span><br><span class="line">    -H attribute    Add Arbitrary header line, eg. <span class="string">'Accept-Encoding: gzip'</span></span><br><span class="line">                    Inserted after all normal header lines. (repeatable)</span><br><span class="line">    -A attribute    Add Basic WWW Authentication, the attributes</span><br><span class="line">                    are a colon separated username and password.</span><br><span class="line">    -P attribute    Add Basic Proxy Authentication, the attributes</span><br><span class="line">                    are a colon separated username and password.</span><br><span class="line">    -X proxy:port   Proxyserver and port number to use</span><br><span class="line">    -V              Print version number and exit</span><br><span class="line">    -k              Use HTTP KeepAlive feature</span><br><span class="line">    -d              Do not show percentiles served table.</span><br><span class="line">    -S              Do not show confidence estimators and warnings.</span><br><span class="line">    -q              Do not show progress when doing more than <span class="number">150</span> requests</span><br><span class="line">    -g filename     Output collected data to gnuplot format file.</span><br><span class="line">    -e filename     Output CSV file with percentages served</span><br><span class="line">    -r              Don<span class="string">'t exit on socket receive errors.</span></span><br><span class="line"><span class="string">    -h              Display usage information (this message)</span></span><br><span class="line"><span class="string">    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)</span></span><br><span class="line"><span class="string">    -f protocol     Specify SSL/TLS protocol</span></span><br><span class="line"><span class="string">                    (SSL3, TLS1, TLS1.1, TLS1.2 or ALL)</span></span><br><span class="line"><span class="string">[root@liyu bin]#</span></span><br></pre></td></tr></table></figure><p>我们了解如何通过Apache Bench模拟并发访问，也看到Tomcat在默认配置情况下每秒处理了2000个请求数。但是，这并不能代表真实的情况，在真实项目中并发量还受到很多因素的影响，例如：对象的产生导致的内存的消耗，以及与数据库的连接占用的资源，服务器的内存和CPU，单机或集群等等。所以不同的项目并发情况各有不同，这也是为什么要进行压力测试的原因。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/10/22/uMVLGs9ypZEzrva.jpg&quot; alt=&quot;abyl.jpg&quot;&gt;&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="Bench" scheme="https://www.uliyu.com/tags/Bench/"/>
    
    <category term="压力测试" scheme="https://www.uliyu.com/tags/压力测试/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot项目部署</title>
    <link href="https://www.uliyu.com/2019/10/21/sbdeploy/"/>
    <id>https://www.uliyu.com/2019/10/21/sbdeploy/</id>
    <published>2019-10-21T12:31:41.000Z</published>
    <updated>2019-10-21T12:34:04.295Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/10/21/57vcwskAPQNmK23.jpg" alt="1"><br><a id="more"></a> </p><h1 id="SpringBoot项目部署"><a href="#SpringBoot项目部署" class="headerlink" title="SpringBoot项目部署"></a>SpringBoot项目部署</h1><h2 id="1-Linux安装tomcat"><a href="#1-Linux安装tomcat" class="headerlink" title="1.Linux安装tomcat"></a>1.Linux安装tomcat</h2><h3 id="获取tomcat"><a href="#获取tomcat" class="headerlink" title="获取tomcat"></a>获取tomcat</h3><p>在线获取tar包 和本地上传</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu /]# cd /usr/tomcat/</span><br><span class="line">[root@liyu tomcat]# wget https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.42/bin/apache-tomcat-8.5.42.tar.gz</span><br></pre></td></tr></table></figure><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu tomcat]#tar -zvxf apache-tomcat-8.5.42.tar.gz</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/10/21/OaXC4fyrg75S6ox.png" alt="1"></p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu tomcat]# cd apache-tomcat-8.5.42/bin</span><br><span class="line">[root@liyu bin]# ./startup.sh </span><br><span class="line">Using CATALINA_BASE:   /usr/tomcat/apache-tomcat-<span class="number">8.5</span><span class="number">.42</span></span><br><span class="line">Using CATALINA_HOME:   /usr/tomcat/apache-tomcat-<span class="number">8.5</span><span class="number">.42</span></span><br><span class="line">Using CATALINA_TMPDIR: /usr/tomcat/apache-tomcat-<span class="number">8.5</span><span class="number">.42</span>/temp</span><br><span class="line">Using JRE_HOME:        /usr/java/jdk1<span class="number">.8</span><span class="number">.0_191</span>/jre</span><br><span class="line">Using CLASSPATH:       /usr/tomcat/apache-tomcat-<span class="number">8.5</span><span class="number">.42</span>/bin/bootstrap.jar:/usr/tomcat/apache-tomcat-<span class="number">8.5</span><span class="number">.42</span>/bin/tomcat-juli.jar</span><br><span class="line">Tomcat started.</span><br><span class="line">[root@liyu bin]#</span><br></pre></td></tr></table></figure><h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><p><img src="https://i.loli.net/2019/10/21/vhiaCA91M57fHTK.png" alt="2"></p><h2 id="2-部署项目到Tomcat"><a href="#2-部署项目到Tomcat" class="headerlink" title="2.部署项目到Tomcat"></a>2.部署项目到Tomcat</h2><h3 id="修改pom文件"><a href="#修改pom文件" class="headerlink" title="修改pom文件"></a>修改pom文件</h3><p> 修改war  打开tomcat依赖 注释热部署依赖</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;project xmlns=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">         xsi:schemaLocation=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.1.8.RELEASE&lt;/version&gt;</span><br><span class="line">        &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line">    &lt;groupId&gt;com.liyu&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;sb&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;packaging&gt;war&lt;/packaging&gt;</span><br><span class="line">    &lt;name&gt;sb&lt;/name&gt;</span><br><span class="line">    &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--&lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">            &lt;optional&gt;true&lt;/optional&gt;</span><br><span class="line">        &lt;/dependency&gt;--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure><h3 id="打包项目"><a href="#打包项目" class="headerlink" title="打包项目"></a>打包项目</h3><p>窗口右侧点击”Maven Projects”–&gt;点击sb下lifecycle下的package即可</p><p><img src="https://i.loli.net/2019/10/21/KHBz9wQL7ivCNlg.png" alt="3"></p><p>显示BUILD SUCCESS代表打包成功，打包成功后会在项目target目录下生成一个项目war包：sb-0.0.1-SNAPSHOT.war</p><h3 id="将war包部署到Tomcat"><a href="#将war包部署到Tomcat" class="headerlink" title="将war包部署到Tomcat"></a>将war包部署到Tomcat</h3><p>1.首先关闭Tomcat</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu bin]# ./shutdown.sh </span><br><span class="line">Using CATALINA_BASE:   /usr/tomcat/apache-tomcat-<span class="number">8.5</span><span class="number">.42</span></span><br><span class="line">Using CATALINA_HOME:   /usr/tomcat/apache-tomcat-<span class="number">8.5</span><span class="number">.42</span></span><br><span class="line">Using CATALINA_TMPDIR: /usr/tomcat/apache-tomcat-<span class="number">8.5</span><span class="number">.42</span>/temp</span><br><span class="line">Using JRE_HOME:        /usr/java/jdk1<span class="number">.8</span><span class="number">.0_191</span>/jre</span><br><span class="line">Using CLASSPATH:       /usr/tomcat/apache-tomcat-<span class="number">8.5</span><span class="number">.42</span>/bin/bootstrap.jar:/usr/tomcat/apache-tomcat-<span class="number">8.5</span><span class="number">.42</span>/bin/tomcat-juli.jar</span><br><span class="line">[root@liyu bin]#</span><br></pre></td></tr></table></figure><p>2.将项目war包上传至Tomcat的webapp目录下</p><p><img src="https://i.loli.net/2019/10/21/Wx4ziq1BakXPgV8.png" alt="4"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu webapps]# ll</span><br><span class="line">总用量 <span class="number">17908</span></span><br><span class="line">drwxr-x---. <span class="number">14</span> root root     <span class="number">4096</span> <span class="number">8</span>月   <span class="number">3</span> <span class="number">17</span>:<span class="number">02</span> docs</span><br><span class="line">drwxr-x---.  <span class="number">6</span> root root       <span class="number">78</span> <span class="number">8</span>月   <span class="number">3</span> <span class="number">17</span>:<span class="number">02</span> examples</span><br><span class="line">drwxr-x---.  <span class="number">5</span> root root       <span class="number">82</span> <span class="number">8</span>月   <span class="number">3</span> <span class="number">17</span>:<span class="number">02</span> host-manager</span><br><span class="line">drwxr-x---.  <span class="number">5</span> root root       <span class="number">97</span> <span class="number">8</span>月   <span class="number">3</span> <span class="number">17</span>:<span class="number">02</span> manager</span><br><span class="line">drwxr-x---.  <span class="number">3</span> root root     <span class="number">4096</span> <span class="number">8</span>月   <span class="number">3</span> <span class="number">17</span>:<span class="number">02</span> ROOT</span><br><span class="line">-rw-r--r--.  <span class="number">1</span> root root <span class="number">18327999</span> <span class="number">9</span>月  <span class="number">29</span> <span class="number">11</span>:<span class="number">11</span> sb-<span class="number">0.0</span><span class="number">.1</span>-SNAPSHOT.war</span><br><span class="line">[root@liyu webapps]#</span><br></pre></td></tr></table></figure><h3 id="启动Tomcat"><a href="#启动Tomcat" class="headerlink" title="启动Tomcat"></a>启动Tomcat</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@liyu bin]# ./startup.sh </span><br><span class="line">Using CATALINA_BASE:   /usr/tomcat/apache-tomcat-<span class="number">8.5</span><span class="number">.42</span></span><br><span class="line">Using CATALINA_HOME:   /usr/tomcat/apache-tomcat-<span class="number">8.5</span><span class="number">.42</span></span><br><span class="line">Using CATALINA_TMPDIR: /usr/tomcat/apache-tomcat-<span class="number">8.5</span><span class="number">.42</span>/temp</span><br><span class="line">Using JRE_HOME:        /usr/java/jdk1<span class="number">.8</span><span class="number">.0_191</span>/jre</span><br><span class="line">Using CLASSPATH:       /usr/tomcat/apache-tomcat-<span class="number">8.5</span><span class="number">.42</span>/bin/bootstrap.jar:/usr/tomcat/apache-tomcat-<span class="number">8.5</span><span class="number">.42</span>/bin/tomcat-juli.jar</span><br><span class="line">Tomcat started.</span><br><span class="line">[root@liyu bin]#</span><br></pre></td></tr></table></figure><h3 id="访问-1"><a href="#访问-1" class="headerlink" title="访问"></a>访问</h3><p><a href="http://192.168.190.129:8080/sb-0.0.1-SNAPSHOT/" target="_blank" rel="noopener">http://192.168.190.129:8080/sb-0.0.1-SNAPSHOT/</a></p><p><img src="https://i.loli.net/2019/10/21/CuZO68L5cHWmtUT.png" alt="5"></p><p>至此，Tomcat作为Web服务器，sb为我们的web项目，一个单机版的web服务已经能够提供给用户访问</p><p>下一篇分享Tomcat服务器能够承担多大的用户并发访问</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/10/21/57vcwskAPQNmK23.jpg&quot; alt=&quot;1&quot;&gt;&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="springboot" scheme="https://www.uliyu.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot构建项目</title>
    <link href="https://www.uliyu.com/2019/10/21/sb/"/>
    <id>https://www.uliyu.com/2019/10/21/sb/</id>
    <published>2019-10-21T11:59:56.000Z</published>
    <updated>2019-10-21T12:09:07.903Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/10/21/ed81yDFxfEMVjca.jpg" alt="1"></p><a id="more"></a> <h1 id="Springboot构建项目"><a href="#Springboot构建项目" class="headerlink" title="Springboot构建项目"></a>Springboot构建项目</h1><p><img src="https://i.loli.net/2019/10/21/sVPSf3rtAIFjC7J.png" alt="1"></p><p><img src="https://i.loli.net/2019/10/21/3YARDT5JPXWrBo7.png" alt="4"></p><p><img src="https://i.loli.net/2019/10/21/qO9iycVZvA4zPku.png" alt="2"></p><h2 id="Dev-Tools、Web和Thymeleaf"><a href="#Dev-Tools、Web和Thymeleaf" class="headerlink" title="Dev Tools、Web和Thymeleaf"></a>Dev Tools、Web和Thymeleaf</h2><p><img src="https://i.loli.net/2019/10/21/DLkePYNq3HUTryu.png" alt="5"></p><h2 id="5-项目结构"><a href="#5-项目结构" class="headerlink" title="5.项目结构"></a>5.项目结构</h2><p><img src="https://i.loli.net/2019/10/21/Xi7NRh6qFe4SoKu.png" alt="6"></p><h4 id="在-src-main-resources-templates目录下创建index-html"><a href="#在-src-main-resources-templates目录下创建index-html" class="headerlink" title="在/src/main/resources/templates目录下创建index.html"></a>在/src/main/resources/templates目录下创建index.html</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Neely&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Welcome To Neely<span class="string">'s Blog&lt;/h1&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p>com.liyu.sb下新建SbController</p><p><img src="https://i.loli.net/2019/10/21/bsJpatHLeKIfVoA.png" alt="7"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liyu.sb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SbController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/helloNeely"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">helloNeely</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello Neely"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改POM 1.注销tomcat依赖 2.修改打包方式为jar包 </p><p>是为了使用idea直接启动该web项目，当部署至tomcat时又需要恢复回来</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;project xmlns=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">         xsi:schemaLocation=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.1.8.RELEASE&lt;/version&gt;</span><br><span class="line">        &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line">    &lt;groupId&gt;com.liyu&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;sb&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;packaging&gt;jar&lt;/packaging&gt;</span><br><span class="line">    &lt;name&gt;sb&lt;/name&gt;</span><br><span class="line">    &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">            &lt;optional&gt;true&lt;/optional&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!--&lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure><p>运行SbApplication中的main方法</p><p><img src="https://i.loli.net/2019/10/21/8khjJQDu6T2iAYL.png" alt="3"></p><p>浏览器访问localhost:8080</p><p><img src="https://i.loli.net/2019/10/21/GCwsnyYVpxjtJrH.png" alt="3"></p><p>到此项目构建成功，该项目只是使用springboot快捷构建项目作为后面的样例项目使用，后期会在该项目基础上进行更改和扩展，下篇讲述单机版web项目的部署</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/10/21/ed81yDFxfEMVjca.jpg&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="springboot" scheme="https://www.uliyu.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>Shell筑基篇</title>
    <link href="https://www.uliyu.com/2019/10/21/shell/"/>
    <id>https://www.uliyu.com/2019/10/21/shell/</id>
    <published>2019-10-21T11:27:51.000Z</published>
    <updated>2019-10-21T11:37:01.614Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/10/21/xwYoLiX2jDF8NdO.jpg" alt="345.jpg"><br><a id="more"></a> </p><h2 id="一、Shell简介"><a href="#一、Shell简介" class="headerlink" title="一、Shell简介"></a>一、Shell简介</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Shell是一个用C语言编写的程序，通过Shell用户可以访问操作系统内核服务，类似于DOS下的command和后来的cmd.exe。Shell既是一种命令语言，又是一种程序设计语言。作为命令语言，它交互式地解释和执行用户输入的命令；作为程序设计语言，它定义了各种变量、参数、函数、流程控制等等。它调用了系统核心的大部分功能来执行程序、建立文件并以并行的方式协调各个程序的运行。因此，对于用户来说，shell是最重要的实用程序，深入了解和熟练掌握shell的特性极其使用方法，是用好Unix/Linux系统的关键。</span><br></pre></td></tr></table></figure><h2 id="二、语言设计"><a href="#二、语言设计" class="headerlink" title="二、语言设计"></a>二、语言设计</h2><p>我经常说道shell脚本，其实是因为Shell是一种脚本语言，也就是解释性语言。程序设计语言可以分为两类：编译型语言和解释型语言。</p><table><thead><tr><th style="text-align:left"><strong>语言</strong></th><th><strong>区别</strong></th></tr></thead><tbody><tr><td style="text-align:left">解释型语言</td><td>也叫做脚本语言。执行这类程序时，解释器需要读取我们编写的源代码，并将其转换成目标代码，再由计算机运行。因为每次执行程序都多了编译的过程，因此效率有所下降</td></tr><tr><td style="text-align:left">编译型语言</td><td>需要预先将我们写好的源代码转换成目标代码，这个过程被称作“编译”。运行程序时，直接读取目标代码。由于编译后的目标代码非常接近计算机底层，因此执行效率很高，这是编译型语言的优点解释型语言         也叫做脚本语言。执行这类程序时，解释器需要读取我们编写的源代码，并将其转换成目标代码，再由计算机运行。因为每次执行程序都多了编译的过程，因此效率有所下降</td></tr></tbody></table><h2 id="三、Shell脚本解析器"><a href="#三、Shell脚本解析器" class="headerlink" title="三、Shell脚本解析器"></a>三、Shell脚本解析器</h2><p>Linux的Shell脚本解释器种类众多，一个系统可以存在多个shell脚本解释器，可以通过cat /etc/shells 命令查看系统中安装的shell脚本解释器。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# cat /etc/shells</span><br><span class="line">/bin/sh</span><br><span class="line">/bin/bash</span><br><span class="line">/sbin/nologin</span><br><span class="line">/usr/bin/sh</span><br><span class="line">/usr/bin/bash</span><br><span class="line">/usr/sbin/nologin</span><br></pre></td></tr></table></figure><p>bash由于易用和免费，在日常工作中被广泛使用。同时，Bash也是大多数Linux系统默认的Shell脚本解释器。</p><h2 id="四、Shell之HelloWorld"><a href="#四、Shell之HelloWorld" class="headerlink" title="四、Shell之HelloWorld"></a>四、Shell之HelloWorld</h2><h3 id="1-新建helloworld-sh"><a href="#1-新建helloworld-sh" class="headerlink" title="1.新建helloworld.sh"></a>1.新建helloworld.sh</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# touch helloworld.sh</span><br></pre></td></tr></table></figure><h3 id="2-编辑helloworld-sh文件"><a href="#2-编辑helloworld-sh文件" class="headerlink" title="2.编辑helloworld.sh文件"></a>2.编辑helloworld.sh文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># author:liyu</span><br><span class="line">echo <span class="string">"helloworld"</span></span><br></pre></td></tr></table></figure><ul><li>#! 是一个约定的标记，它告诉系统这个脚本需要什么解释器来执行，即使用哪一种Shell，这里指定bash</li><li>echo 是Shell的一个内部指令，用于在屏幕上打印出指定的字符串</li></ul><h3 id="3-赋予helloworld-sh的执行权限"><a href="#3-赋予helloworld-sh的执行权限" class="headerlink" title="3.赋予helloworld.sh的执行权限"></a>3.赋予helloworld.sh的执行权限</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# chmod +x helloworld.sh</span><br></pre></td></tr></table></figure><h3 id="4-执行helloworld-sh脚本"><a href="#4-执行helloworld-sh脚本" class="headerlink" title="4.执行helloworld.sh脚本"></a>4.执行helloworld.sh脚本</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# ./helloworld.sh </span><br><span class="line">helloworld</span><br><span class="line">[root@kaiyukeji /]#</span><br></pre></td></tr></table></figure><p>注意，一定要写成./helloworld.sh，而不是helloworld.sh，linux系统会去PATH里寻找有没有叫helloworld.sh的，而helloworld.sh不在PATH里，所以写成helloworld.sh是会找不到命令的，要用./helloworld.sh告诉系统说，就在当前目录找。 </p><h3 id="5-执行helloworld-sh脚本方式二"><a href="#5-执行helloworld-sh脚本方式二" class="headerlink" title="5.执行helloworld.sh脚本方式二"></a>5.执行helloworld.sh脚本方式二</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# /bin/sh helloworld.sh </span><br><span class="line">helloworld</span><br><span class="line">[root@kaiyukeji /]#</span><br></pre></td></tr></table></figure><p>这种运行方式是，直接运行解释器，其参数就是shell脚本的文件名，当使用这种方式时，脚本中的#!/bin/bash指定的解释器是不生效的，当前使用什么解释器就是什么解释器</p><h2 id="五、Shell变量"><a href="#五、Shell变量" class="headerlink" title="五、Shell变量"></a>五、Shell变量</h2><ul><li>语法格式：变量名=变量值</li></ul><p>shell变量定义的严格语法限制：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 变量名和等号之间不能有空格</span><br><span class="line">2. 变量名首个字符必须为英文字母</span><br><span class="line">3. 不能包含标点符号但能够使用下划线(_)</span><br><span class="line">4. 不能使用空格</span><br><span class="line">5. 不能使用 bash 里的关键字</span><br></pre></td></tr></table></figure><h3 id="1-变量类型"><a href="#1-变量类型" class="headerlink" title="1.变量类型"></a>1.变量类型</h3><p>运行shell时会存在三种变量类型</p><table><thead><tr><th><strong>类型</strong></th><th><strong>解释</strong></th></tr></thead><tbody><tr><td>局部变量</td><td>局部变量在脚本或命令中定义，仅在当前shell实例中有效，其他shell启动的程序不能访问局部变量</td></tr><tr><td>环境变量</td><td>所有的程序，包括shell启动的程序，都能访问环境变量，有些程 序需要环境变量来保证其正常运行。可以用过set命令查看当前环境变量</td></tr><tr><td>shell变量</td><td>由shell程序设置的特殊变量。shell变量中有一部分是环境变量，有一部分是局部变量，这些变量保证了shell 的正常运行</td></tr></tbody></table><h3 id="2-定义变量"><a href="#2-定义变量" class="headerlink" title="2.定义变量"></a>2.定义变量</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">"liyu"</span></span><br></pre></td></tr></table></figure><h3 id="3-引用变量"><a href="#3-引用变量" class="headerlink" title="3.引用变量"></a>3.引用变量</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">"liyu"</span></span><br><span class="line">echo $&#123;name&#125;</span><br><span class="line">echo $name</span><br></pre></td></tr></table></figure><p>引用一个定义过的变量，只要在变量名前面加$即可，变量名外面的花括号是可选的，加不加都行，加花括号是为了帮助解释器识别变量的边界。</p><h3 id="4-重新定义变量"><a href="#4-重新定义变量" class="headerlink" title="4.重新定义变量"></a>4.重新定义变量</h3><p>已经定义的变量，可以被重新定义</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">"liyu"</span></span><br><span class="line">echo $&#123;name&#125;</span><br><span class="line">name=<span class="string">"liyu1"</span></span><br><span class="line">echo $&#123;name&#125;</span><br></pre></td></tr></table></figure><h3 id="5-只读变量"><a href="#5-只读变量" class="headerlink" title="5.只读变量"></a>5.只读变量</h3><p>使用readonly命令可以将变量定义为只读变量，只读变量的值不能被改变</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">"liyu"</span></span><br><span class="line">readonly name</span><br><span class="line">name=<span class="string">"liyu1"</span></span><br></pre></td></tr></table></figure><h3 id="6-删除变量"><a href="#6-删除变量" class="headerlink" title="6.删除变量"></a>6.删除变量</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">"liyu"</span></span><br><span class="line">unset name</span><br><span class="line">echo $name</span><br></pre></td></tr></table></figure><p>注意：使用unset命令可以删除变量，变量被删除后不能再次使用，同时unset命令不能删除只读变量。</p><h2 id="六、Shell字符串"><a href="#六、Shell字符串" class="headerlink" title="六、Shell字符串"></a>六、Shell字符串</h2><p>字符串是shell编程中最常用最有用的数据类型，字符串可以用单引号，也可以用双引号，也可以不用引号。</p><h3 id="1-单引号"><a href="#1-单引号" class="headerlink" title="1.单引号"></a>1.单引号</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str=<span class="string">'this is a string'</span></span><br></pre></td></tr></table></figure><p>单引号字符串的限制：</p><ul><li>单引号里的任何字符都会原样输出，单引号字符串中的变量是无效的；</li><li>单引号字串中不能出现单独一个的单引号（对单引号使用转义符后也不行），但可成对出现，作为字符串拼接使用。</li></ul><h3 id="2-双引号"><a href="#2-双引号" class="headerlink" title="2.双引号"></a>2.双引号</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">'liyu'</span></span><br><span class="line">str=<span class="string">"Hello, my name is  \"$name\"! \n"</span></span><br><span class="line">echo -e $str</span><br></pre></td></tr></table></figure><p>输出结果为:Hello, my name is “liyu”! </p><p>双引号的优点：</p><ul><li>双引号里可以有变量</li><li>双引号里可以出现转义字符</li></ul><h3 id="3-拼接字符串"><a href="#3-拼接字符串" class="headerlink" title="3.拼接字符串"></a>3.拼接字符串</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">"liyu"</span></span><br><span class="line"># 使用双引号拼接</span><br><span class="line">greeting=<span class="string">"hello, "</span>$name<span class="string">" !"</span></span><br><span class="line">greeting_1=<span class="string">"hello, $&#123;name&#125; !"</span></span><br><span class="line">echo $greeting  $greeting_1</span><br><span class="line"># 使用单引号拼接</span><br><span class="line">greeting_2=<span class="string">'hello, '</span>$name<span class="string">' !'</span></span><br><span class="line">greeting_3=<span class="string">'hello, $&#123;name&#125; !'</span></span><br><span class="line">echo $greeting_2  $greeting_3</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# ./haha.sh </span><br><span class="line">hello, liyu ! hello, liyu !</span><br><span class="line">hello, liyu ! hello, $&#123;name&#125; !</span><br><span class="line">[root@kaiyukeji /]#</span><br></pre></td></tr></table></figure><h3 id="4-获取字符长度"><a href="#4-获取字符长度" class="headerlink" title="4.获取字符长度"></a>4.获取字符长度</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">"liyu"</span></span><br><span class="line">echo $&#123;#name&#125;</span><br></pre></td></tr></table></figure><p> 输出:4</p><h3 id="5-提取子字符串"><a href="#5-提取子字符串" class="headerlink" title="5.提取子字符串"></a>5.提取子字符串</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">'my name is liyu'</span></span><br><span class="line">echo $&#123;name:<span class="number">11</span>:<span class="number">14</span>&#125;   <span class="comment">//执行输出liyu</span></span><br></pre></td></tr></table></figure><h2 id="六、Shell参数传递"><a href="#六、Shell参数传递" class="headerlink" title="六、Shell参数传递"></a>六、Shell参数传递</h2><p>在执行Shell脚本时，可以向脚本传递参数。脚本内获取参数的格式为:$n。n代表一个数字，1为执行脚本的第一个参数，2为执行脚本的第二个参数，以此类推……<br>$0 表示当前脚本名称。</p><h3 id="1-修改helloworld-sh"><a href="#1-修改helloworld-sh" class="headerlink" title="1.修改helloworld.sh"></a>1.修改helloworld.sh</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo $<span class="number">1</span></span><br><span class="line">echo $<span class="number">2</span></span><br><span class="line">echo $<span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="2-执行携带参数"><a href="#2-执行携带参数" class="headerlink" title="2.执行携带参数"></a>2.执行携带参数</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# ./helloworld.sh liyu liyu1 liyu2</span><br><span class="line">liyu</span><br><span class="line">liyu1</span><br><span class="line">liyu2</span><br><span class="line">[root@kaiyukeji /]#</span><br></pre></td></tr></table></figure><h2 id="七、Shell特殊字符"><a href="#七、Shell特殊字符" class="headerlink" title="七、Shell特殊字符"></a>七、Shell特殊字符</h2><table><thead><tr><th><strong>字符</strong></th><th><strong>意义</strong></th></tr></thead><tbody><tr><td>$#</td><td>传递到脚本的参数个数</td></tr><tr><td>$*</td><td>以一个单字符串显示所有向脚本传递的参数</td></tr><tr><td>$$</td><td>脚本运行的当前进程ID号</td></tr><tr><td>$!</td><td>后台运行的最后一个进程的ID号</td></tr><tr><td>$@</td><td>与$*相同，但是使用时加引号，并在引号中返回每个参数</td></tr><tr><td>$?</td><td>显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误</td></tr></tbody></table><p>$*和$@区别：</p><p>相同点：都表示传递给脚本的所有参数。<br>不同点：不被” “包含时，$<em>和$@都以$1 $2… $n 的形式组成参数列表。<br>被” “包含时，”$</em>” 会将所有的参数作为一个整体，以”$1 $2 … $n” 的形式组成一个整串;”$@” 会将各个参数分开，以”$1” “$2” … “$n” 的 形式组成一个参数列表。</p><h2 id="八、Shell数组"><a href="#八、Shell数组" class="headerlink" title="八、Shell数组"></a>八、Shell数组</h2><ul><li>bash支持一维数组（不支持多维数组），并且没有限定数组的大小。在Shell中，用括号来表示数组，数组元素用“空格”符号分割开。定义数组的一般形式为：<br>array_name=(value1 … valuen)</li></ul><h3 id="1-修改helloworld-sh内容"><a href="#1-修改helloworld-sh内容" class="headerlink" title="1.修改helloworld.sh内容"></a>1.修改helloworld.sh内容</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">names=(liyu liyu1 liyu2 liyu3)</span><br><span class="line">echo $&#123;names&#125;</span><br><span class="line">echo <span class="string">"读取下标为0"</span></span><br><span class="line">echo $&#123;names[<span class="number">0</span>]&#125;</span><br><span class="line">echo <span class="string">"读取下标为1"</span></span><br><span class="line">echo $&#123;names[<span class="number">1</span>]&#125;</span><br><span class="line">echo <span class="string">"读取所有"</span></span><br><span class="line">echo $&#123;names[*]&#125;</span><br><span class="line">echo <span class="string">"读取所有@"</span></span><br><span class="line">echo $&#123;names[@]&#125;</span><br><span class="line">echo <span class="string">"获取数组长度"</span></span><br><span class="line">echo $&#123;#names[*]&#125;</span><br><span class="line">echo <span class="string">"获取数组长度@"</span></span><br><span class="line">echo $&#123;#names[@]&#125;</span><br></pre></td></tr></table></figure><h3 id="2-执行helloworld-sh"><a href="#2-执行helloworld-sh" class="headerlink" title="2.执行helloworld.sh"></a>2.执行helloworld.sh</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# ./helloworld.sh </span><br><span class="line">liyu</span><br><span class="line">读取下标为<span class="number">0</span></span><br><span class="line">liyu</span><br><span class="line">读取下标为<span class="number">1</span></span><br><span class="line">liyu1</span><br><span class="line">读取所有</span><br><span class="line">liyu liyu1 liyu2 liyu3</span><br><span class="line">读取所有@</span><br><span class="line">liyu liyu1 liyu2 liyu3</span><br><span class="line">获取数组长度</span><br><span class="line"><span class="number">4</span></span><br><span class="line">获取数组长度@</span><br><span class="line"><span class="number">4</span></span><br><span class="line">[root@kaiyukeji /]#</span><br></pre></td></tr></table></figure><h2 id="九、Shell运算符"><a href="#九、Shell运算符" class="headerlink" title="九、Shell运算符"></a>九、Shell运算符</h2><ul><li>Shell和其他编程语音一样，支持包括:算术、关系、布尔、字符串等运算符。</li><li>原生bash不支持简单的数学运算，但是可以通过其他命令来实现，例如 awk 和 expr，expr 最常用。expr 是一款表达式计算工具，使用它能完成表达式的求值操作。</li></ul><h3 id="1-算数运算符"><a href="#1-算数运算符" class="headerlink" title="1.算数运算符"></a>1.算数运算符</h3><table><thead><tr><th><strong>运算符</strong></th><th>描述</th></tr></thead><tbody><tr><td>+</td><td>加法</td></tr><tr><td>-</td><td>减法</td></tr><tr><td>*</td><td>乘法</td></tr><tr><td>/</td><td>除法</td></tr><tr><td>%</td><td>取余</td></tr><tr><td>=</td><td>赋值</td></tr><tr><td>==</td><td>相等。用于比较两个数字，相同则返回 true。</td></tr><tr><td>!=</td><td>不相等。用于比较两个数字，不相同则返回 true。</td></tr></tbody></table><blockquote><p>1.修改helloworld.sh脚本内容</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">a=<span class="number">10</span></span><br><span class="line">b=<span class="number">20</span></span><br><span class="line"></span><br><span class="line">val=`expr $a + $b`</span><br><span class="line">echo <span class="string">"a + b : $val"</span></span><br><span class="line"></span><br><span class="line">val=`expr $a - $b`</span><br><span class="line">echo <span class="string">"a - b : $val"</span></span><br><span class="line"></span><br><span class="line">val=`expr $a \* $b`</span><br><span class="line">echo <span class="string">"a * b : $val"</span></span><br><span class="line"></span><br><span class="line">val=`expr $b / $a`</span><br><span class="line">echo <span class="string">"b / a : $val"</span></span><br><span class="line"></span><br><span class="line">val=`expr $b % $a`</span><br><span class="line">echo <span class="string">"b % a : $val"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ $a == $b ]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"a 等于 b"</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ $a != $b ]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"a 不等于 b"</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure><blockquote><p>2.执行helloworld.sh</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# ./helloworld.sh </span><br><span class="line">a + b : <span class="number">30</span></span><br><span class="line">a - b : -<span class="number">10</span></span><br><span class="line">a * b : <span class="number">200</span></span><br><span class="line">b / a : <span class="number">2</span></span><br><span class="line">b % a : <span class="number">0</span></span><br><span class="line">a 不等于 b</span><br><span class="line">[root@kaiyukeji /]#</span><br></pre></td></tr></table></figure><blockquote><ul><li>1.乘号(*)前边必须加反斜杠()</li></ul></blockquote><blockquote><ul><li>2.条件表达式要放在方括号之间，并且要有空格</li></ul></blockquote><h3 id="2-关系运算符"><a href="#2-关系运算符" class="headerlink" title="2.关系运算符"></a>2.关系运算符</h3><table><thead><tr><th><strong>运算符</strong></th><th>描述</th></tr></thead><tbody><tr><td>-eq</td><td>EQUAL等于</td></tr><tr><td>-ne</td><td>NOT EQUAL不等于</td></tr><tr><td>-gt</td><td>GREATER THAN大于</td></tr><tr><td>-lt</td><td>LESS THAN小于</td></tr><tr><td>-ge</td><td>GREATER THAN OR EQUAL 大于等于</td></tr><tr><td>-le</td><td>LESS THAN OR EQUAL 小于等</td></tr></tbody></table><p>1.修改helloworld.sh</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">a=<span class="number">10</span></span><br><span class="line">b=<span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ $a -eq $b ]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"$a -eq $b : a 等于 b"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">"$a -eq $b: a 不等于 b"</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ $a -ne $b ]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"$a -ne $b: a 不等于 b"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">"$a -ne $b : a 等于 b"</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ $a -gt $b ]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"$a -gt $b: a 大于 b"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">"$a -gt $b: a 不大于 b"</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ $a -lt $b ]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"$a -lt $b: a 小于 b"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">"$a -lt $b: a 不小于 b"</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ $a -ge $b ]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"$a -ge $b: a 大于或等于 b"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">"$a -ge $b: a 小于 b"</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ $a -le $b ]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"$a -le $b: a 小于或等于 b"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">"$a -le $b: a 大于 b"</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>2.执行helloworld.sh</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# ./helloworld.sh </span><br><span class="line"><span class="number">10</span> -eq <span class="number">20</span>: a 不等于 b</span><br><span class="line"><span class="number">10</span> -ne <span class="number">20</span>: a 不等于 b</span><br><span class="line"><span class="number">10</span> -gt <span class="number">20</span>: a 不大于 b</span><br><span class="line"><span class="number">10</span> -lt <span class="number">20</span>: a 小于 b</span><br><span class="line"><span class="number">10</span> -ge <span class="number">20</span>: a 小于 b</span><br><span class="line"><span class="number">10</span> -le <span class="number">20</span>: a 小于或等于 b</span><br><span class="line">[root@kaiyukeji /]#</span><br></pre></td></tr></table></figure><h3 id="3-逻辑运算符"><a href="#3-逻辑运算符" class="headerlink" title="3.逻辑运算符"></a>3.逻辑运算符</h3><table><thead><tr><th><strong>运算符</strong></th><th>描述</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>逻辑的 AND</td></tr><tr><td></td><td></td><td></td><td>逻辑的 OR</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">a=<span class="number">10</span></span><br><span class="line">b=<span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ $a -lt <span class="number">100</span> &amp;&amp; $b -gt <span class="number">100</span> ]]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"返回 true"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">"返回 false"</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ $a -lt <span class="number">100</span> || $b -gt <span class="number">100</span> ]]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"返回 true"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">"返回 false"</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# ./helloworld.sh </span><br><span class="line">返回 <span class="keyword">false</span></span><br><span class="line">返回 <span class="keyword">true</span></span><br><span class="line">[root@kaiyukeji /]#</span><br></pre></td></tr></table></figure><h3 id="4-布尔运算符"><a href="#4-布尔运算符" class="headerlink" title="4.布尔运算符"></a>4.布尔运算符</h3><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>!</td><td>非运算，表达式为 true 则返回 false，否则返回 true。</td></tr><tr><td>-o</td><td>或运算，有一个表达式为 true 则返回 true。</td></tr><tr><td>-a</td><td>与运算，两个表达式都为 true 才返回 true。</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">a=<span class="number">10</span></span><br><span class="line">b=<span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ $a != $b ]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"$a != $b : a 不等于 b"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">"$a == $b: a 等于 b"</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ $a -lt <span class="number">100</span> -a $b -gt <span class="number">15</span> ]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"$a 小于 100 且 $b 大于 15 : 返回 true"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">"$a 小于 100 且 $b 大于 15 : 返回 false"</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ $a -lt <span class="number">100</span> -o $b -gt <span class="number">100</span> ]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"$a 小于 100 或 $b 大于 100 : 返回 true"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">"$a 小于 100 或 $b 大于 100 : 返回 false"</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ $a -lt <span class="number">5</span> -o $b -gt <span class="number">100</span> ]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"$a 小于 5 或 $b 大于 100 : 返回 true"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">"$a 小于 5 或 $b 大于 100 : 返回 false"</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>执行结果:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# ./helloworld.sh </span><br><span class="line"><span class="number">10</span> != <span class="number">20</span> : a 不等于 b</span><br><span class="line"><span class="number">10</span> 小于 <span class="number">100</span> 且 <span class="number">20</span> 大于 <span class="number">15</span> : 返回 <span class="keyword">true</span></span><br><span class="line"><span class="number">10</span> 小于 <span class="number">100</span> 或 <span class="number">20</span> 大于 <span class="number">100</span> : 返回 <span class="keyword">true</span></span><br><span class="line"><span class="number">10</span> 小于 <span class="number">5</span> 或 <span class="number">20</span> 大于 <span class="number">100</span> : 返回 <span class="keyword">false</span></span><br><span class="line">[root@kaiyukeji /]#</span><br></pre></td></tr></table></figure><h3 id="5-文件测试运算符"><a href="#5-文件测试运算符" class="headerlink" title="5.文件测试运算符"></a>5.文件测试运算符</h3><table><thead><tr><th><strong>操作符</strong></th><th>描述</th></tr></thead><tbody><tr><td>-b file</td><td>文件是否是块设备文件，如果是，则返回 true</td></tr><tr><td>-c file</td><td>文件是否是字符设备文件，如果是，则返回 true</td></tr><tr><td>-d file</td><td>是否是目录，如果是，则返回 true</td></tr><tr><td>-f file</td><td>文件是否是普通文件（既不是目录，也不是设备文件），如果是，则返回 true。</td></tr><tr><td>-g file</td><td>文件是否设置了 SGID 位，如果是，则返回 true</td></tr><tr><td>-k file</td><td>文件是否设置了粘着位(Sticky Bit)，如果是，则返回 true</td></tr><tr><td>-p file</td><td>文件是否是具名管道，如果是，则返回 true</td></tr><tr><td>-u file</td><td>文件是否设置了 SUID 位，如果是，则返回 true</td></tr><tr><td>-r file</td><td>文件是否可读，如果是，则返回 true</td></tr><tr><td>-w file</td><td>文件是否可写，如果是，则返回 true</td></tr><tr><td>-x file</td><td>文件是否可执行，如果是，则返回 true</td></tr><tr><td>-s file</td><td>文件是否为空（文件大小是否大于0），不为空返回 true</td></tr><tr><td>-e file</td><td>文件（包括目录）是否存在，如果是，则返回 true</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">file=<span class="string">"/usr/liyu"</span></span><br><span class="line"><span class="keyword">if</span> [ -r $file ]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"文件可读"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">"文件不可读"</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ -w $file ]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"文件可写"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">"文件不可写"</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ -x $file ]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"文件可执行"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">"文件不可执行"</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ -f $file ]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"文件为普通文件"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">"文件为特殊文件"</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ -d $file ]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"文件是个目录"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">"文件不是个目录"</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ -s $file ]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"文件不为空"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">"文件为空"</span></span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ -e $file ]</span><br><span class="line">then</span><br><span class="line">   echo <span class="string">"文件存在"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">"文件不存在"</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>执行结果:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji usr]# ls</span><br><span class="line">bin  elk  etc  games  include  java  lib  lib64  libexec  liyu  local  mysqld  protest  sbin  share  src  tmp  tomcat</span><br><span class="line">[root@kaiyukeji usr]# cd /         </span><br><span class="line">[root@kaiyukeji /]# ./helloworld.sh </span><br><span class="line">文件可读</span><br><span class="line">文件可写</span><br><span class="line">文件可执行</span><br><span class="line">文件为特殊文件</span><br><span class="line">文件是个目录</span><br><span class="line">文件不为空</span><br><span class="line">文件存在</span><br><span class="line">[root@kaiyukeji /]#</span><br></pre></td></tr></table></figure><h2 id="十、Shell流程控制"><a href="#十、Shell流程控制" class="headerlink" title="十、Shell流程控制"></a>十、Shell流程控制</h2><h3 id="1-if-else"><a href="#1-if-else" class="headerlink" title="1.if-else"></a>1.if-else</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span> condition</span><br><span class="line">then</span><br><span class="line">    <span class="comment">//做你想做的事</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="comment">//做你想做的事</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> condition1</span><br><span class="line">then</span><br><span class="line">    <span class="comment">//做你想做的事</span></span><br><span class="line">elif condition2 </span><br><span class="line">then </span><br><span class="line">    <span class="comment">//做你想做的事</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="comment">//做你想做的事</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h3 id="2-case"><a href="#2-case" class="headerlink" title="2.case"></a>2.case</h3><p>case 语句匹配一个值或一个模式，如果匹配成功，执行相匹配的命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> 值 in</span><br><span class="line">模式<span class="number">1</span>)</span><br><span class="line">    <span class="comment">//做你想做的事</span></span><br><span class="line">    ;;</span><br><span class="line">模式<span class="number">2</span>）</span><br><span class="line">    <span class="comment">//做你想做的事</span></span><br><span class="line">    ;;</span><br><span class="line">*)</span><br><span class="line">    <span class="comment">//做你想做的事</span></span><br><span class="line">    ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>取值后面必须为关键字 in，每一模式必须以右括号结束。取值可以为变量或常数。匹配发现取值符合某一模式后，其间所有命令开始执行直至 ;;。;; 与其他语言中的 break 类似，意思是跳到整个 case 语句的最后。取值将检测匹配的每一个模式。一旦模式匹配，则执行完匹配模式相应命令后不再继续其他模式。如果无一匹配模式，使用星号 * 捕获该值，再执行后面的命令。</p><h3 id="3-for"><a href="#3-for" class="headerlink" title="3.for"></a>3.for</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 变量 in 列表</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="comment">//做你想做的事</span></span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="4-while"><a href="#4-while" class="headerlink" title="4.while"></a>4.while</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> command</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   <span class="comment">//做你想做的是</span></span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="5-until"><a href="#5-until" class="headerlink" title="5.until"></a>5.until</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">until command</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   <span class="comment">//做你想做的事</span></span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>ntil 循环执行一系列命令直至条件为 true 时停止。until 循环与 while 循环在处理方式上刚好相反。一般while循环优于until循环，但在某些时候，也只是极少数情况下，until 循环更加有用。</p><blockquote><p>command 一般为条件表达式，如果返回值为 false，则继续执行循环体内的语句，否则跳出循环。</p></blockquote><h2 id="十一、Shell函数"><a href="#十一、Shell函数" class="headerlink" title="十一、Shell函数"></a>十一、Shell函数</h2><p>函数可以让我们将一个复杂功能划分成若干模块，让程序结构更加清晰，代码重复利用率更高。像其他编程语言一样，Shell 也支持函数。Shell 函数必须先定义后使用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">demoFun()&#123;</span><br><span class="line">    echo <span class="string">"这是我的第一个 shell 函数!"</span></span><br><span class="line">&#125;</span><br><span class="line">echo <span class="string">"-----函数开始执行-----"</span></span><br><span class="line">demoFun </span><br><span class="line">echo <span class="string">"-----函数执行完毕-----"</span></span><br></pre></td></tr></table></figure><p>执行脚本:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@kaiyukeji /]# ./helloworld.sh </span><br><span class="line">-----函数开始执行-----</span><br><span class="line">这是我的第一个 shell 函数!</span><br><span class="line">-----函数执行完毕-----</span><br><span class="line">[root@kaiyukeji /]#</span><br></pre></td></tr></table></figure><blockquote><p>如果函数有返回值，则函数返回值可以在调用该函数后通过 $? 来获得。</p></blockquote><h2 id="十二、参考资料"><a href="#十二、参考资料" class="headerlink" title="十二、参考资料"></a>十二、参考资料</h2><p>参考资料；<a href="http://www.runoob.com/linux/linux-shell.html" target="_blank" rel="noopener">http://www.runoob.com/linux/linux-shell.html</a> </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/10/21/xwYoLiX2jDF8NdO.jpg&quot; alt=&quot;345.jpg&quot;&gt;&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="shell" scheme="https://www.uliyu.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>就是想看你笑的样子</title>
    <link href="https://www.uliyu.com/2019/10/20/xiaoxiao/"/>
    <id>https://www.uliyu.com/2019/10/20/xiaoxiao/</id>
    <published>2019-10-20T13:29:57.000Z</published>
    <updated>2019-10-22T15:17:57.184Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/10/20/iEdyMowVLQN7rgk.jpg" alt="345.jpg"><br><a id="more"></a> </p><h2 id="一丝感悟"><a href="#一丝感悟" class="headerlink" title="一丝感悟"></a>一丝感悟</h2><h3 id="1-如果生活不能让你笑，你就笑笑生活"><a href="#1-如果生活不能让你笑，你就笑笑生活" class="headerlink" title="1. 如果生活不能让你笑，你就笑笑生活"></a>1. 如果生活不能让你笑，你就笑笑生活</h3><p>随着年龄的增长，我们要承担的越来越多，开心也没有小时候那么纯粹了；其实，用心去感受，乐事还是挺多的。生活很难，如果生活不能让你笑，你就笑笑生活。诚然，其实快乐与否，关键看你怎么去看，你的态度决定了你的行为。即便有繁重的工作，琐碎的工作，倘若我们有轻松的生活态度去面对，你就会发现世界还是非常美好的，每天都可以笑一笑。</p><h3 id="2-挣钱是为了什么"><a href="#2-挣钱是为了什么" class="headerlink" title="2. 挣钱是为了什么"></a>2. 挣钱是为了什么</h3><p>“老崔，我们为什么要买这么多打折商品？” “省钱啊。” “可是我们现在并不缺钱，为什么还要这么省？” “日子就要省着过呀！” “那钱省下来干吗？” “有个大病大灾的时候好用啊。” “那一直没病没灾的，岂不是很遗憾？ ….</p><p>　　我们挣钱的初衷，是为了过上更好的生活，而不是用来等待坏日子。<br>　　同理，你总觉得现在还没有资格休息，你的能力还不够强；你总是想，还是先熬着吧，熬到升职加薪就好了，那时候的自己应该会自由很多…时间就这么过着，当初还未工作时候的愿景，明明已经实现了，却还是持续焦虑着。我们努力的初衷，是为了享受生活，而不是一直焦灼下去。</p><h3 id="3-学霸和学渣都有保质期"><a href="#3-学霸和学渣都有保质期" class="headerlink" title="3. 学霸和学渣都有保质期"></a>3. 学霸和学渣都有保质期</h3><p>　　所谓学霸，只代表一个人在某个阶段学习已知知识和应试能力比较强而已。并不代表在漫长的人生路上，他们其他的能力也比别人强。<br>　　以前的那些学霸不一定能坚持到最后成为社会精英，而相反原来的一些表现淡淡的却反倒成了人才！其实任何时间段都是人生长河中的一部分，在此跌倒没必要灰心丧气自暴自弃，接下来的比赛会一个比一个更值得你去用尽全力。</p><h3 id="4-旅行是为了在世界中寻找自己"><a href="#4-旅行是为了在世界中寻找自己" class="headerlink" title="4. 旅行是为了在世界中寻找自己"></a>4. 旅行是为了在世界中寻找自己</h3><p>　　与我而言，有时候旅行是为了让自己暂时的抛掉生活的琐事，让自己投入旅行的乐趣中，寻找内心的平静。有时候旅游就是想去玩的。玩是为了什么？当然为了开心。<br>　　旅行最大的好处，不是能见到多少人，见过多美的风景，而是走着走着，在一个际遇下，突然重新认识了自己，找到了真实的自己。旅行也是一个化繁为简的征途：把去时沉甸甸的内心变轻变灵，去除那些无多余的负担，好好地和自己相处，和心在一起；回时虽然身体疲惫，但心却轻松了，因为找到了那个真实而又内心充盈的自己。</p><h2 id="经典语句"><a href="#经典语句" class="headerlink" title="经典语句"></a>经典语句</h2><ol><li><strong>[每个人心中都有一本漫画书]</strong></li></ol><p>　　生活很难，如果生活不能让你笑，你就笑笑生活。开心的时候就要笑一笑，不开心的时候等会再笑。</p><ol><li><strong>[原来以为]</strong></li></ol><p>　　我们这一生，常常会为“原来以为”付出很多代价</p><ol><li><strong>[超市特卖会]</strong></li></ol><p>　　挣钱是为了过上好日子，还是等待坏日子？</p><ol><li><strong>[所有的“不行”都会变成“没有也行”]</strong></li></ol><p>　　小时候，没有妈妈不行；少年时，没有朋友不行；青年时，没有爱情不行；现在…没有手机不行。最终，哪些曾经被我们视为生命中“没有不行”的，在漫漫的人生路上，渐渐地变成了“没有也行”。</p><ol><li><strong>[找到自己]</strong></li></ol><p>　　旅行，不是为了寻找世界，而是在世界中寻找自己。在校园中找到年少的自己，在海边夕阳找到温暖安静的自己，在路边咖啡馆找到无所事事的自己……原来我已经太久没有和自己一起。</p><ol><li><strong>[懒是一种心情]</strong></li></ol><p>　　直到有一天我想明白了一个问题，但凡用“ 忄”旁的字，都和情绪有关。比如：怕、情、忧。所以“懒”，它不是病，它是一种心情！</p><ol><li><strong>[生活的真相]</strong></li></ol><p>　　多少生活在华丽的外表下，是无奈的庸俗和苟且。适合别人的良方，也许对你没有什么屁用。所以不要艳羡，无需模仿，适合你的，只有你自己能找到。</p><ol><li><strong>[人生的幸福]</strong></li></ol><p>　　人生的顺序，不过从左到右，最多排列第四位就是人生的尽头。所以当你左右都有人时，是最大的幸福。我们都应该，好好珍惜这份幸福。</p><ol><li><strong>[什么是幸福]</strong></li></ol><p>　　幸福并不是有没有在你左右，而是在你左右的人，是不是你想要的那个人，所以幸福，才会这么——难。</p><ol><li><strong>[赤裸的人性]</strong></li></ol><p>　　这世上，从来就没有感同身受，人性本是如此。勇敢承认没什么不好意思。所以，不管多么轰轰烈烈的社会事件，都会像流星一样快速划过，再无痕迹。</p><ol><li><strong>[贫富的差距]</strong></li></ol><p>　　“穷人”往往自得自乐，“富人”却常常患得患失。所谓的穷人，因为没有多余的，所以有一点就很开心；所谓的富人因为有太多害怕失去反而患得患失。这其实也是一种心态，一种看问题的方式。如果你只看到失去，那么你就会一直害怕失去，可是如果你一直看到你得到了什么，那么你就会感恩所得。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>生活中有很多小事，都蕴含着各种道理，只是我们不曾细心观察。在无聊的闲暇的时光，通过这些配上寥寥数语的简笔画，生活的趣味和蕴含的道理互动立现。<br>也许只是咧开嘴笑一笑，也许只是放松一瞬间，但是“就是想看你笑的样子”的目的，也就达到了。如果有更多感悟，记录下来，偶尔有时间回顾一下，治愈心中的烦闷、压抑，安慰身处焦虑中的你我，也是一件不错的事情。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/10/20/iEdyMowVLQN7rgk.jpg&quot; alt=&quot;345.jpg&quot;&gt;&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="随笔" scheme="https://www.uliyu.com/categories/随笔/"/>
    
    
  </entry>
  
  <entry>
    <title>候鸟和鱼</title>
    <link href="https://www.uliyu.com/2019/06/06/love/"/>
    <id>https://www.uliyu.com/2019/06/06/love/</id>
    <published>2019-06-06T03:27:52.000Z</published>
    <updated>2019-12-14T05:45:36.983Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/06/06/5cf88fd2c8f2e96954.jpg" alt="uliyu.jpg"><br><a id="more"></a><br>从一个季节逃到另一个季节需要毅力，需要勇气，甚至是生命。每年这个时候，鱼都会洄游到天的另一端，候鸟也会迁徙到那里，他们起点不同，但终点一样。</p><p>候鸟最喜欢的就是春天了，春天可以见到鱼。他总是会早到，然后在那片水域上空不停振翅，他知道鱼喜欢天空，他便把这里擦亮，让鱼看见最美的天。</p><p>他们每年都会在一起交换各自的故事。</p><p>“我给你讲啊，今年可有趣了”<br>“去年的那只螃蟹你还记得吧？今年产了好多小螃蟹，她的海螺家根本住不下”<br>“大峡谷那边又涨潮了”<br>“小黄鱼去了大海深处寻找自由，一直没回来，听说那里暗流湍急，还有水怪”<br>“今年海浪汹涌，没有看见打鱼人出海”</p><p>“我新换了一副羽毛，可以飞得更快更高”<br>“我穿越过暴风雨”<br>“我去过极北的森林，那里花很香，树林茂密，没有猎人”<br>“来的路上我飞上了最高的山峰，很冷，但风景很好。云成海，可以在里面自由穿梭，像软绵绵的棉花糖”</p><p>鱼儿已经沉迷，痴痴的望着蓝天。</p><p>“鱼儿，你为什么向往天空啊？”<br>“我想跟你一起飞，我厌倦了水的束缚，我不想摆动身躯，总觉得这是一种病，拼了命的摇尾乞怜活下去的病。”<br>“带我一起飞，好吗？”</p><p>候鸟没有接话，他知道鱼是属于大海的，就像他属于天空。</p><p>“鱼儿，明年我们各自送对方一件礼物吧”<br>“好啊”</p><p>恰如其分的承诺是打破沉默最好的工具。</p><p>鱼在父亲的鳞片上看过了很多故事，其中描述最多的是深海的珍珠，纯净如白昼。她决定要找到这颗珍珠送给候鸟。</p><p>这次是她从小到大最陌生的一次出行，她要独自在海底穿过大峡谷，游过深沟，但想到可以和候鸟在春天相遇就不觉得害怕。</p><p>当她快要筋疲力竭的时候，终于在如浓墨般深黑的海中，见到了一抹光亮划破黑夜来到她的眼前，好暖的光啊，像太阳一样。故事是真的，深海的珍珠果然很漂亮。</p><p>候鸟觉得今年时间过得格外的慢，他只想早点飞到那片海域，他后悔了不想让鱼去寻找礼物，因为他这段时间总是做梦。</p><p>他梦见鱼儿游得太远，忘记了回家的路，<br>他梦见鱼儿游得太浅，闯进了坚固的渔网，<br>他梦见鱼儿游得太深，遇到了凶猛的水怪。</p><p>春天终于到来，候鸟在之前精心挑选了刚入冬的链草织成篮子，这个篮子比他的身体大整整两倍。他比往年更早来了一周，把海域上所有的云朵都赶进了篮子里，因为鱼向往天空的自由，便觉云朵是最合适的礼物，虽然日月星辰更好，但他摘不到。</p><p>候鸟看到了最灿烂的珍珠，鱼看到篮子里雪白的云朵。</p><p>满心欢喜。</p><p>这是鱼儿第一次触到云，激动得说不出话来。她觉得这是最好的礼物，最美的云，至少比这片海域上的云要美。她急忙抬头想要对比一下，然而，万里无云。</p><p>“我把你头上这片天空的云朵都装在了这里呀”</p><p>突然间，鱼儿觉得云朵不那么舒服了，至少没有她千辛万苦得到的珍珠白，就像一团乱糟糟的棉絮，陷进去只会让她窒息。</p><p>候鸟不懂，这不是刚刚她喜欢的东西吗？为什么转眼之间，眼里就充满了厌恶。</p><p>“你不喜欢这个礼物？”<br>“喜欢”<br>“最美的云就在你头顶，我把它取来给你，你不开心吗？”<br>“开心”<br>“我每年都迁徙，只有这里云最美，我只想把最美的东西给你”<br>“谢谢你”</p><p>除了谢谢，鱼儿不想再多说一句话。</p><p>候鸟不懂，有时候过程比结果重要得多。</p><p>候鸟不想看到鱼儿不开心，他心想，云朵不好，就只有带她高飞。</p><p>“我带你飞吧”<br>“好啊！”</p><p>终于等来了这一天，候鸟用他有力的双爪带起鱼，他怕锋利的爪伤着鱼儿，但更怕她掉下去，所以他握得很紧。</p><p>离开水面的一瞬间，耀眼的阳光让鱼眯起了眼睛，周围一片雪白，柔软的光线如蚕丝慢慢拨开她的双眼，她听到了风的呼唤，穿过了云的身体。她不愿错过这样的风景哪怕一秒，双眼努力的睁大，嘴也努力的张大，直至忘记了如何去呼吸。</p><p>候鸟认为一定是他的爪子太锋利杀死了鱼，他折断了双脚，他相信一定会有海天相连的地方，那里鸟和鱼可以永远生活在一起，他要一直飞，直到找到那个地方。</p><p>鱼的记忆很短，短到她有时候刚出门就会忘了回家的路，所以每年和候鸟的相遇，她都会像父亲一样，把经历写成故事，刻在自己的鳞片上。这次的故事，该由他来写了。候鸟摘下身上最美的一片羽毛，写上最后的故事，用嘴啄下鱼鳞串成项链戴在脖子上，珍珠被他放在嘴里。</p><p>天空多了一只没有脚，不会叫，也不愿抬头看天的候鸟，在他眼里只有胸前鱼鳞的项链，身下蔚蓝的深海，嘴里纯白的珍珠，远方海天一线的目的地。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/06/06/5cf88fd2c8f2e96954.jpg&quot; alt=&quot;uliyu.jpg&quot;&gt;&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="随笔" scheme="https://www.uliyu.com/categories/随笔/"/>
    
    
  </entry>
  
  <entry>
    <title>郭源潮</title>
    <link href="https://www.uliyu.com/2018/10/25/gyc/"/>
    <id>https://www.uliyu.com/2018/10/25/gyc/</id>
    <published>2018-10-25T03:18:19.000Z</published>
    <updated>2019-06-06T04:07:16.418Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/06/06/5cf89121a5cee36376.jpg" alt="345.jpg"></p><a id="more"></a> <h2 id="你的病也和我的一样-风月难扯-离合不骚。"><a href="#你的病也和我的一样-风月难扯-离合不骚。" class="headerlink" title="你的病也和我的一样 风月难扯 离合不骚。"></a>你的病也和我的一样 风月难扯 离合不骚。</h2><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="500" height="100" src="//music.163.com/outchain/player?type=2&id=564853818&auto=1&height=66"></iframe></p><blockquote><p>你说你知道他们的世界<br>悲歌三首买一切<br>买昆仑落脚 蓬莱放思想<br>买人们的争执酿酒汤<br>买公主坟的乌鸦<br>事发之木和东窗之麻<br>买胭脂河里船行渔歌<br>黄金世界中万物法则<br>你我都一样 将被遗忘 郭源潮<br>你的病也和我的一样 风月难扯 离合不骚<br>层楼终究误少年 自由早晚乱余生<br>你我山前没相见 山后别相逢<br>买石灰街车站的海鸥<br>山水禽兽和年少一梦<br>买太平湖底陈年水墨<br>哥本哈根的童年传说<br>其实你我都一样 终将被遗忘 郭源潮<br>你的病也和我的一样 风月难扯 离合不骚<br>层楼终究误少年 自由早晚乱余生<br>你我山前没相见 山后别相逢</p></blockquote><h3 id="一个初入世的毛头小子，总想着鲜衣怒马，或是烈焰繁花，仗剑天涯。扬言要的是美人入怀，要的是沙场点兵，要的是赢得生前身后名。"><a href="#一个初入世的毛头小子，总想着鲜衣怒马，或是烈焰繁花，仗剑天涯。扬言要的是美人入怀，要的是沙场点兵，要的是赢得生前身后名。" class="headerlink" title="一个初入世的毛头小子，总想着鲜衣怒马，或是烈焰繁花，仗剑天涯。扬言要的是美人入怀，要的是沙场点兵，要的是赢得生前身后名。"></a>一个初入世的毛头小子，总想着鲜衣怒马，或是烈焰繁花，仗剑天涯。扬言要的是美人入怀，要的是沙场点兵，要的是赢得生前身后名。</h3><h3 id="一位饱经沧桑的老朽，寒暄的是东篱采菊，荆钗布裙，松花酿酒，春水煎茶。"><a href="#一位饱经沧桑的老朽，寒暄的是东篱采菊，荆钗布裙，松花酿酒，春水煎茶。" class="headerlink" title="一位饱经沧桑的老朽，寒暄的是东篱采菊，荆钗布裙，松花酿酒，春水煎茶。"></a>一位饱经沧桑的老朽，寒暄的是东篱采菊，荆钗布裙，松花酿酒，春水煎茶。</h3><h3 id="话不投机，一面之缘，天下之大，酒过三巡，别相见了。"><a href="#话不投机，一面之缘，天下之大，酒过三巡，别相见了。" class="headerlink" title="话不投机，一面之缘，天下之大，酒过三巡，别相见了。"></a>话不投机，一面之缘，天下之大，酒过三巡，别相见了。</h3>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/06/06/5cf89121a5cee36376.jpg&quot; alt=&quot;345.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="随笔" scheme="https://www.uliyu.com/tags/随笔/"/>
    
  </entry>
  
  <entry>
    <title>南漂的你</title>
    <link href="https://www.uliyu.com/2018/10/18/nanpiao/"/>
    <id>https://www.uliyu.com/2018/10/18/nanpiao/</id>
    <published>2018-10-18T01:30:48.000Z</published>
    <updated>2019-06-06T04:05:16.672Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/06/06/5cf8874c55ab646333.jpg" alt="李宇.jpg"></p><h3 id="远离家乡，选择远方"><a href="#远离家乡，选择远方" class="headerlink" title="远离家乡，选择远方"></a>远离家乡，选择远方</h3><a id="more"></a><p>这是你到这个城市快半年的时间，因常忙碌很久都没记录，也有很多都已忘记。这个城市的夜晚灯火通明，半夜十二点，喧嚣的街道比白天还要热闹好几倍，公交上、地铁里，每个人都步履匆匆，在别人眼中，南方经济发达，来自四面八方形形色色的人在深圳混得腰缠万贯，当然，也有人不如意，黯然回归家乡，毕竟并不是所有人都那么幸运,有足够的能量来抵抗现实物质上的消耗!而你是为了什么？ 生活 or 梦想？</p><p>远离家乡，选择远方</p><p>你早已习惯这里的一切，生活过的不好不坏，没有大悲也没有大喜，庆幸的是你找了一份工作，虽然工资水平不是很高，但是还是每日过的很充实。可是在这座城市，工资水平有多高才算高呢，30万，40万，还是100万，你不知道。你唯一知道的是，大部分人都觉得钱不够用，除去房租生活费，再网掏点东西，感觉就没剩下的了。可是在这个互联网时代，好像每个人都年薪百万，甚至还更高，即使你蜗居在深圳的某个城中村，依旧可以拿着最高像素的手机，摆上一个很酷的pose站在世界之窗前合影留念，然后发朋友圈。你经常在人群中欢声笑语，很乐观，可总会在那么一瞬间，会生发出一种巨大的落寞感，你常想的很多，想到失眠，失眠还想！你也会隔三差五和父母通话，告诉父母你很好，有很多朋友，并不孤单，让他们放心。但是能聊天的朋友越来越少，老朋友走着走着也不见了，打开好友列表，发现对方已经不在列表了。那些还保存在微信里的朋友，好像也很久已经没有联系了，这大概就是感情如何慢慢变淡的，不常联系，直到淡到你都快忘记了他的模样。你知道这些都是成年之后，他们都拥有了自己的生活。以前的你还渴望爱情，但现在也就不奢望一份爱情了，关于爱情这个东西，你依旧相信着，只不过现在已经释怀了（不谈感情，未曾拥有）。</p><p>你每天的生活就是上下班，晚上回到不大的房子才是自己的时间，你选择看书，听音乐，还是学习，健身，这些都是你的计划。你买了很多书，放在床头，计划是一周一本，但只是看了开头，现在懒的翻都不想翻…………..</p><p>你说这就是生活，得不到的永远无法释怀，已经实现的见怪不怪，到不了的地方叫远方，回不去的地方是故乡，这是你南漂的开始，你过的不好也不坏，你有很多话想说，最后都没说，你有很长时间都没有记录，很多都已经忘记！<br>                                                                                           .<br>                                                                     18年10月17号<br>                                                                       深圳.南山</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/06/06/5cf8874c55ab646333.jpg&quot; alt=&quot;李宇.jpg&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;远离家乡，选择远方&quot;&gt;&lt;a href=&quot;#远离家乡，选择远方&quot; class=&quot;headerlink&quot; title=&quot;远离家乡，选择远方&quot;&gt;&lt;/a&gt;远离家乡，选择远方&lt;/h3&gt;</summary>
    
    
    
    <category term="随笔" scheme="https://www.uliyu.com/categories/随笔/"/>
    
    
  </entry>
  
</feed>
